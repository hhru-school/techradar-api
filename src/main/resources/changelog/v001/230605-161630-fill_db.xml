<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

    <changeSet id="230605-161630" author="parfenovds">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">SELECT COUNT(1)
                                         FROM company
                                         WHERE company_id IS NOT NULL;</sqlCheck>
        </preConditions>
        <sql>
            INSERT INTO company (company_id, name, creation_time, last_change_time)
            VALUES (1, 'HeadHunter', now(), now());
            SELECT setval('company_company_id_seq', (SELECT max(company_id) FROM company));

            INSERT INTO tr_user (user_id, username, password, company_id, creation_time, last_change_time, role)
            VALUES (1, 'user@hh.ru', '$2a$10$buXPe7kc5Ffk.5mXjzv.D.km/naLTyOYhkTPsrgtaA720onbeXBs.', 1, now(), now(), 'USER'),
                   (2, 'admin@hh.ru', '$2a$10$buXPe7kc5Ffk.5mXjzv.D.km/naLTyOYhkTPsrgtaA720onbeXBs.', 1, now(), now(), 'ADMIN');
            SELECT setval('tr_user_user_id_seq', (SELECT max(user_id) FROM tr_user));

            INSERT INTO radar (radar_id, name, company_id, author_id, creation_time, last_change_time)
            VALUES (1, 'Backend Tech Radar - 2022Q4', 1, 1, now(), now()),
                   (2, 'Backend Tech Radar - 2023Q1', 1, 1, now(), now()),
                   (3, 'Android Tech Radar - 2022Q1', 1, 1, now(), now()),
                   (4, 'Android Tech Radar - 2022Q4', 1, 1, now(), now()),
                   (5, 'Frontend Tech Radar - 2021Q1', 1, 1, now(), now()),
                   (6, 'Frontend Tech Radar - 2022Q4', 1, 1, now(), now()),
                   (7, 'iOS Tech Radar - 2021Q4', 1, 1, now(), now()),
                   (8, 'iOS Tech Radar - 2022Q4', 1, 1, now(), now());
            SELECT setval('radar_radar_id_seq', (SELECT max(radar_id) FROM radar));

            INSERT INTO ring (ring_id, name, radar_id, position, creation_time, last_change_time)
            VALUES (1, 'adopt', 1, 1, now(), now()),
                   (2, 'hold', 1, 4, now(), now()),
                   (3, 'assess', 1, 3, now(), now()),
                   (4, 'remove', 1, 5, now(), now()),
                   (5, 'trial', 1, 2, now(), now()),
                   (6, 'adopt', 2, 1, now(), now()),
                   (7, 'hold', 2, 4, now(), now()),
                   (8, 'assess', 2, 3, now(), now()),
                   (9, 'remove', 2, 5, now(), now()),
                   (10, 'trial', 2, 2, now(), now()),
                   (11, 'Используется', 3, 1, now(), now()),
                   (12, 'Устарело', 3, 3, now(), now()),
                   (13, 'Эксперимент', 3, 2, now(), now()),
                   (14, 'Оценка', 3, 4, now(), now()),
                   (15, 'Используется', 4, 1, now(), now()),
                   (16, 'Устарело', 4, 3, now(), now()),
                   (17, 'Эксперимент', 4, 2, now(), now()),
                   (18, 'adopt', 5, 1, now(), now()),
                   (19, 'trial', 5, 2, now(), now()),
                   (20, 'hold', 5, 4, now(), now()),
                   (21, 'adopt', 6, 1, now(), now()),
                   (22, 'trial', 6, 2, now(), now()),
                   (23, 'assess', 6, 3, now(), now()),
                   (24, 'hold', 6, 4, now(), now()),
                   (25, 'Используется', 7, 1, now(), now()),
                   (26, 'Устарело', 7, 3, now(), now()),
                   (27, 'Оценка', 7, 4, now(), now()),
                   (28, 'Используется', 8, 1, now(), now()),
                   (29, 'Устарело', 8, 3, now(), now()),
                   (30, 'Оценка', 8, 4, now(), now());
            SELECT setval('ring_ring_id_seq', (SELECT max(ring_id) FROM ring));

            INSERT INTO quadrant (quadrant_id, name, radar_id, position, creation_time, last_change_time)
            VALUES (1, 'Data Management', 1, 1, now(), now()),
                   (2, 'Languages', 1, 3, now(), now()),
                   (3, 'Platform &amp; Insfrastructure', 1, 4, now(), now()),
                   (4, 'Frameworks &amp; Tools', 1, 2, now(), now()),
                   (5, 'Data Management', 2, 1, now(), now()),
                   (6, 'Languages', 2, 3, now(), now()),
                   (7, 'Platform &amp; Insfrastructure', 2, 4, now(), now()),
                   (8, 'Frameworks &amp; Tools', 2, 2, now(), now()),
                   (9, 'Языки и тулинг', 3, 4, now(), now()),
                   (10, 'Сервис', 3, 3, now(), now()),
                   (11, 'Подход', 3, 1, now(), now()),
                   (12, 'Библиотека', 3, 2, now(), now()),
                   (13, 'Языки и тулинг', 4, 4, now(), now()),
                   (14, 'Сервис', 4, 3, now(), now()),
                   (15, 'Подход', 4, 1, now(), now()),
                   (16, 'Библиотека', 4, 2, now(), now()),
                   (17, 'Languages &amp; Frameworks', 5, 1, now(), now()),
                   (18, 'Libraries', 5, 4, now(), now()),
                   (19, 'Techniques', 5, 3, now(), now()),
                   (20, 'Tools &amp; Environment', 5, 2, now(), now()),
                   (21, 'Languages &amp; Frameworks', 6, 1, now(), now()),
                   (22, 'Libraries', 6, 4, now(), now()),
                   (23, 'Techniques', 6, 3, now(), now()),
                   (24, 'Tools &amp; Environment', 6, 2, now(), now()),
                   (25, 'Языки и инструменты', 7, 1, now(), now()),
                   (26, 'Библиотека', 7, 2, now(), now()),
                   (27, 'Сервис', 7, 3, now(), now()),
                   (28, 'Подход', 7, 4, now(), now()),
                   (29, 'Языки и инструменты', 8, 1, now(), now()),
                   (30, 'Библиотека', 8, 2, now(), now()),
                   (31, 'Сервис', 8, 3, now(), now()),
                   (32, 'Подход', 8, 4, now(), now());
            SELECT setval('quadrant_quadrant_id_seq', (SELECT max(quadrant_id) FROM quadrant));

            INSERT INTO blip (blip_id, name, description, radar_id, creation_time, last_change_time)
            VALUES (1, 'PostgreSQL', '', 1, now(), now()),
                   (2, 'Cassandra', '', 1, now(), now()),
                   (3, 'Redis', '', 1, now(), now()),
                   (4, 'Memcached', '', 1, now(), now()),
                   (5, 'Zookeeper', '', 1, now(), now()),
                   (6, 'ClickHouse', '', 1, now(), now()),
                   (7, 'Airflow', '', 1, now(), now()),
                   (8, 'Elasticsearch', '', 1, now(), now()),
                   (9, 'Kafka', '', 1, now(), now()),
                   (10, 'RabbitMQ', '', 1, now(), now()),
                   (11, 'Logstash', '', 1, now(), now()),
                   (12, 'Hadoop', '', 1, now(), now()),
                   (13, 'Presto', '', 1, now(), now()),
                   (14, 'Hive', '', 1, now(), now()),
                   (15, 'Flink', '', 1, now(), now()),
                   (16, 'Spark', '', 1, now(), now()),
                   (17, 'Kafka Streams', '', 1, now(), now()),
                   (18, 'Debezium', '', 1, now(), now()),
                   (19, 'Java 17', '', 1, now(), now()),
                   (20, 'Java 15', '', 1, now(), now()),
                   (21, 'Java 14', '', 1, now(), now()),
                   (22, 'Java 11', '', 1, now(), now()),
                   (23, 'Java 8', '', 1, now(), now()),
                   (24, 'Python 3.9', '', 1, now(), now()),
                   (25, 'Python 3.8', '', 1, now(), now()),
                   (26, 'Python 3.7', '', 1, now(), now()),
                   (27, 'Python 2', '', 1, now(), now()),
                   (28, 'Nginx', '', 1, now(), now()),
                   (29, 'Ansible', '', 1, now(), now()),
                   (30, 'Docker', '', 1, now(), now()),
                   (31, 'MinIO', '', 1, now(), now()),
                   (32, 'Sentry', '', 1, now(), now()),
                   (33, 'Okmeter', '', 1, now(), now()),
                   (34, 'Consul', '', 1, now(), now()),
                   (35, 'Kubernetes', '', 1, now(), now()),
                   (36, 'Prometheus', '', 1, now(), now()),
                   (37, 'Bamboo', '', 1, now(), now()),
                   (38, 'Graphana', '', 1, now(), now()),
                   (39, 'Sonar', '', 1, now(), now()),
                   (40, 'GitHub', '', 1, now(), now()),
                   (41, 'PgBouncer', '', 1, now(), now()),
                   (42, 'Filebeat', '', 1, now(), now()),
                   (43, 'git', '', 1, now(), now()),
                   (44, 'Maven', '', 1, now(), now()),
                   (45, 'pip', '', 1, now(), now()),
                   (46, 'Spring Core', '', 1, now(), now()),
                   (47, 'SpringData', '', 1, now(), now()),
                   (48, 'Jetty', '', 1, now(), now()),
                   (49, 'AsyncHttpClient', '', 1, now(), now()),
                   (50, 'Jersey', '', 1, now(), now()),
                   (51, 'jOOQ', '', 1, now(), now()),
                   (52, 'Hibernate', '', 1, now(), now()),
                   (53, 'Jackson', '', 1, now(), now()),
                   (54, 'SLF4J', '', 1, now(), now()),
                   (55, 'MyBatis', '', 1, now(), now()),
                   (56, 'OpenAPI / Swagger', '', 1, now(), now()),
                   (57, 'HikariCP', '', 1, now(), now()),
                   (58, 'Tornado', '', 1, now(), now()),
                   (59, 'asyncio', '', 1, now(), now()),
                   (60, 'Flask', '', 1, now(), now()),
                   (61, 'Gunicorn', '', 1, now(), now()),
                   (62, 'SQLAlchemy', '', 1, now(), now()),
                   (63, 'aiopg', 'Library for accessing a PostgreSQL database from the asyncio framework.', 1, now(), now()),
                   (64, 'aiohttp', 'Asynchronous HTTP Client/Server for asyncio and Python.', 1, now(), now()),
                   (65, 'PgQ', '', 1, now(), now()),
                   (66, 'JUnit 5', '', 1, now(), now()),
                   (67, 'JUnit 4', '', 1, now(), now()),
                   (68, 'mockito', '', 1, now(), now()),
                   (69, 'TestContainers', '', 1, now(), now()),
                   (70, 'pg-embedded', '', 1, now(), now()),
                   (71, 'pytest', '', 1, now(), now()),
                   (72, 'unittest (python)', '', 1, now(), now()),
                   (73, 'jib', 'Maven plugin for building Docker and OCI images for your Java applications.', 1, now(), now()),
                   (74, 'skaffold', 'Skaffold is a command line tool that facilitates continuous development for Kubernetes applications.', 1, now(),
                    now()),
                   (75, 'openTelemetry',
                    'OpenTelemetry is a collection of tools, APIs, and SDKs to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software''s performance and behavior.',
                    1, now(), now()),
                   (76, 'graphql', '', 1, now(), now()),
                   (78, 'PostgreSQL', '', 2, now(), now()),
                   (79, 'Scylla', '', 2, now(), now()),
                   (80, 'Cassandra', '', 2, now(), now()),
                   (81, 'Redis', '', 2, now(), now()),
                   (82, 'Memcached', '', 2, now(), now()),
                   (83, 'Zookeeper', '', 2, now(), now()),
                   (84, 'ClickHouse', '', 2, now(), now()),
                   (85, 'Airflow', '', 2, now(), now()),
                   (86, 'Elasticsearch', '', 2, now(), now()),
                   (87, 'Kafka', '', 2, now(), now()),
                   (88, 'RabbitMQ', '', 2, now(), now()),
                   (89, 'Logstash new', '', 2, now(), now()),
                   (90, 'Hadoop', '', 2, now(), now()),
                   (91, 'Presto', '', 2, now(), now()),
                   (92, 'Hive', '', 2, now(), now()),
                   (93, 'Flink', '', 2, now(), now()),
                   (94, 'Spark', '', 2, now(), now()),
                   (95, 'Kafka Streams', '', 2, now(), now()),
                   (96, 'Debezium', '', 2, now(), now()),
                   (97, 'Java 17', '', 2, now(), now()),
                   (98, 'Java 15', '', 2, now(), now()),
                   (99, 'Java 14', '', 2, now(), now()),
                   (100, 'Java 11', '', 2, now(), now()),
                   (101, 'Python 3.9', '', 2, now(), now()),
                   (102, 'Python 3.8', '', 2, now(), now()),
                   (103, 'Python 3.7', '', 2, now(), now()),
                   (104, 'Python 2', '', 2, now(), now()),
                   (105, 'Nginx', '', 2, now(), now()),
                   (106, 'Ansible', '', 2, now(), now()),
                   (107, 'Docker', '', 2, now(), now()),
                   (108, 'MinIO', '', 2, now(), now()),
                   (109, 'Sentry', '', 2, now(), now()),
                   (110, 'Okmeter', '', 2, now(), now()),
                   (111, 'Consul', '', 2, now(), now()),
                   (112, 'Kubernetes', '', 2, now(), now()),
                   (113, 'Prometheus', '', 2, now(), now()),
                   (114, 'Bamboo', '', 2, now(), now()),
                   (115, 'Graphana', '', 2, now(), now()),
                   (116, 'Sonar', '', 2, now(), now()),
                   (117, 'GitHub', '', 2, now(), now()),
                   (118, 'PgBouncer', '', 2, now(), now()),
                   (119, 'Filebeat', '', 2, now(), now()),
                   (120, 'git', '', 2, now(), now()),
                   (121, 'Maven', '', 2, now(), now()),
                   (122, 'pip', '', 2, now(), now()),
                   (123, 'Spring Core', '', 2, now(), now()),
                   (124, 'SpringData', '', 2, now(), now()),
                   (125, 'Jetty', '', 2, now(), now()),
                   (126, 'AsyncHttpClient', '', 2, now(), now()),
                   (127, 'Jersey', '', 2, now(), now()),
                   (128, 'jOOQ', '', 2, now(), now()),
                   (129, 'Hibernate', '', 2, now(), now()),
                   (130, 'Jackson', '', 2, now(), now()),
                   (131, 'SLF4J', '', 2, now(), now()),
                   (132, 'Logstash', '', 2, now(), now()),
                   (133, 'MyBatis', '', 2, now(), now()),
                   (134, 'OpenAPI / Swagger', '', 2, now(), now()),
                   (135, 'HikariCP', '', 2, now(), now()),
                   (136, 'Tornado', '', 2, now(), now()),
                   (137, 'asyncio', '', 2, now(), now()),
                   (138, 'Flask', '', 2, now(), now()),
                   (139, 'Gunicorn', '', 2, now(), now()),
                   (140, 'SQLAlchemy', '', 2, now(), now()),
                   (141, 'aiopg', 'Library for accessing a PostgreSQL database from the asyncio framework.', 2, now(), now()),
                   (142, 'aiohttp', 'Asynchronous HTTP Client/Server for asyncio and Python.', 2, now(), now()),
                   (143, 'PgQ', '', 2, now(), now()),
                   (144, 'JUnit 5', '', 2, now(), now()),
                   (145, 'JUnit 4', '', 2, now(), now()),
                   (146, 'mockito', '', 2, now(), now()),
                   (147, 'TestContainers', '', 2, now(), now()),
                   (148, 'pg-embedded', '', 2, now(), now()),
                   (149, 'pytest', '', 2, now(), now()),
                   (150, 'unittest (python)', '', 2, now(), now()),
                   (151, 'jib', 'Maven plugin for building Docker and OCI images for your Java applications.', 2, now(), now()),
                   (152, 'skaffold', 'Skaffold is a command line tool that facilitates continuous development for Kubernetes applications.', 2, now(),
                    now()),
                   (153, 'openTelemetry',
                    'OpenTelemetry is a collection of tools, APIs, and SDKs to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software''s performance and behavior.',
                    2, now(), now()),
                   (154, 'graphql', '', 2, now(), now()),
                   (155, 'Kotlin', 'Основной ЯП, процент использования — 96,4%', 3, now(), now()),
                   (156, 'Java', 'Устаревший ЯП, процент использования — 2,6%, legacy only', 3, now(), now()),
                   (157, 'Ruby', 'Начали использовать для описания инфраструктурных скриптов', 3, now(), now()),
                   (158, 'fastlane', 'Используем экосистему fastlane для описания инфраструктурных флоу и автоматизаций сборок', 3, now(), now()),
                   (159, 'Marathon', 'По-прежнему используем свой форк для формирования Allure-отчётов с шагами', 3, now(), now()),
                   (160, 'Docker', 'Перевели в Docker все инструменты для CI-сборок', 3, now(), now()),
                   (161, 'Python', 'Python - основной язык для алгоритмов подсчёта различных процессных метрик и автоматизаций для Jira', 3, now(),
                    now()),
                   (162, 'Kotlin Script', 'Постепенно переводим существующие groovy-скрипты на kts', 3, now(), now()),
                   (163, 'Groovy', 'Отказываемся от Groovy скриптов в сторону kts', 3, now(), now()),
                   (164, 'bash',
                    'Используем bash для нескольких базовых скриптов инфраструктуры, но отказались от него как от основного языка в скриптах в пользу Ruby',
                    3, now(), now()),
                   (165, 'detekt', 'За год провели ревизию используемых правил, перешли на detekt "здорового человека"', 3, now(), now()),
                   (166, 'Android Lint', 'Запустили lint-проверки на регулярной основе при сборке PR-ов', 3, now(), now()),
                   (167, 'Talaiot', 'Используем плагин для оценки скорости сборок', 3, now(), now()),
                   (168, 'Keeper', 'Продолжаем оценивать Keeper', 3, now(), now()),
                   (169, 'Google play publisher', 'Отказались от gradle-плагина в пользу fastlane', 3, now(), now()),
                   (170, 'JDK Desugaring', 'Desugaring фич и JDK для Java 8+', 3, now(), now()),
                   (171, 'Gradle convention-плагины', 'Описываем общую логику gradle-скриптов при помощи convention-плагинов', 3, now(), now()),
                   (172, 'Kotlin synthetic properties', 'Отказались от kotlin-android-extensions в пользу View Binding', 3, now(), now()),
                   (173, 'Mainframer', 'Используем Mainframer с удаленными сборками для увеличения производительности', 3, now(), now()),
                   (174, 'Firebase Remote Config', 'Сервис для хранения некоторых настроек приложения, постепенно уходим от него', 3, now(), now()),
                   (288, 'Robolectric', 'Библиотека для instrumentation-тестирования Android-приложений', 4, now(), now()),
                   (175, 'Firebase Analytics', 'Сервис для работы с аналитикой. Часть аналитики обрабатываем через собственный in-house сервис.', 3,
                    now(), now()),
                   (176, 'Yandex Metrica', 'Сервис для работы с аналитикой', 3, now(), now()),
                   (177, 'MyTracker', 'Сервис для работы с аналитикой', 3, now(), now()),
                   (178, 'Yandex Ad', 'Отображение контекстной рекламы', 3, now(), now()),
                   (179, 'WebIm', 'Сервис для предоставления чата технической поддержки и FAQ', 3, now(), now()),
                   (180, 'HMS',
                    'Встроили HMS-сервисы в основные приложения, с возможностью fallback-а на GMS, когда у пользователей есть такая возможность.', 3,
                    now(), now()),
                   (181, 'Firebase Crashlytics', 'Основная система сбора информации о крашах и non fatal-ах', 3, now(), now()),
                   (182, 'Google Auth', 'Один из сервисов авторизации в приложении', 3, now(), now()),
                   (183, 'Firebase Cloud Messaging', 'Основной сервис для отправки push-уведомлений', 3, now(), now()),
                   (184, 'UserX', 'Внедрили сервис UserX-а для получения полезных инсайтов об использовании приложений', 3, now(), now()),
                   (185, 'Firebase App Distribution', 'Используем для распространения сборок среди тестировщиков и бета-тестеров', 3, now(), now()),
                   (186, 'Многомодульная архитектура',
                    'Разбиение кодовой базы на независимые Gradle-модули помогает увеличивать связность и уменьшать зацепление', 3, now(), now()),
                   (187, 'Single Activity',
                    'Переход от Activity к фрагментам помог избежать появления неконсистентноо состояния из-за пересозданий процесса', 3, now(),
                    now()),
                   (188, 'MVP', 'Традиционный подход разделения логики Presentation слоя, избавляемся от него в пользу MVVM', 3, now(), now()),
                   (189, 'MVI', 'Подход реализации бизнес логики на основе стейт машины', 3, now(), now()),
                   (190, 'MVVM', 'Подход для реактивного связывания UI с логикой на базе ViewModel из Jetpack и RxJava', 3, now(), now()),
                   (191, 'Unit testing', 'Покрываем unit-тестами сложную бизнес-логику и переходы стейт-машин', 3, now(), now()),
                   (192, 'Test fixtures DSL', 'Подробнее про наш DSL можно почитать вот здесь', 3, now(), now()),
                   (193, 'Instrumentation testing',
                    'Некоторые экраны требуют более тщательной проверки вплоть до надписей и цвета картинок - для таких случаев мы используем этот подход.',
                    3, now(), now()),
                   (194, 'Параллельный запуск UI-тестов',
                    'За год мы увеличили число параллельно запускаемых эмуляторов для ускорения прохождения регрессов наших приложений', 3, now(),
                    now()),
                   (195, 'CI (Bamboo)',
                    'Bamboo по-прежнему является нашим CI-сервером, на котором мы настроили регулярный запуск различных типов сборок', 3, now(),
                    now()),
                   (196, 'Статический анализ',
                    'Статический анализ помогает поддерживать качество кодовой базы и приложений. Мы регулярно пересматриваем и актуализируем список используемых проверок, добавляем новые инструменты.',
                    3, now(), now()),
                   (197, 'Аналитика времени сборки', 'Начали следить за временем сборки приложений, чтобы понимать влияние вносимых изменений', 3,
                    now(), now()),
                   (198, 'Дизайн-система',
                    'Дизайн-система помогает нам описывать переиспользуемые компоненты в коде и поддерживать их актуальность. Мы описали специальное приложение-галерею, в рамках которой пробуем различные библиотеки и новые подходы.',
                    3, now(), now()),
                   (199, 'Автоматизация действий в IDE', 'Реализуем простые автоматизации с помощью плагинов для Android Studio', 3, now(), now()),
                   (200, 'Cookbook', 'Пишем Cookbook для структурированного шаринга best practice''s по работе с проектом между всеми разработчиками',
                    3, now(), now()),
                   (201, 'Dagger 2',
                    'DI-фреймворк для compile time генерации графа зависимостей, используется только во внутреннем приложении для дизайн-системы в связке с Hilt',
                    3, now(), now()),
                   (202, 'Moxy', 'MVP Фреймворк, Язык с кодогенерацией для сохранения состояния при смене конфигурации', 3, now(), now()),
                   (203, 'MVI Core', 'Фреймворк от Badoo для реализации паттерна MVI', 3, now(), now()),
                   (204, 'Glide', 'Библиотека для работы с изображениями', 3, now(), now()),
                   (205, 'Retrofit', 'Библиотека для выполнения сетевых запросов', 3, now(), now()),
                   (206, 'Room', 'ORM', 3, now(), now()),
                   (207, 'RxJava 2', 'Реактивно-событийный фреймворк. Используется для связи архитектурных слоев и потоков данных', 3, now(), now()),
                   (208, 'RxBinding', 'Реактивно-событийная обертка над базовыми View', 3, now(), now()),
                   (209, 'Permission Dispatcher',
                    'Библиотека с кодогенерацией для обработки разрешений. Оборачивает работу как с нативными разрешениями, так и с различными их модификациями у вендоров',
                    3, now(), now()),
                   (210, 'Toothpick 3',
                    'Dependency Injection фрtймворк. Максимально лаконичен при использовании. Использует частичную кодогенерацию и рантайм-построение графа зависимостей.',
                    3, now(), now()),
                   (211, 'Cicerone', 'Библиотека для гибкой реализации навигации, незавязанной полностью на UI-слой', 3, now(), now()),
                   (212, 'Picasso', 'Библиотека для асинхронной загрузки и кэширования изображений (сейчас используем Glide)', 3, now(), now()),
                   (213, 'RxKotlin', 'Библиотека для Kotlin-синтаксического сахара вокруг RxJava', 3, now(), now()),
                   (214, 'Material Components', 'Библиотека с компонентами для реализации Material Design от Google', 3, now(), now()),
                   (215, 'Junit 4', 'Библиотека тестирования java-кода. Мигрируем на Junit 5', 3, now(), now()),
                   (216, 'Junit 5', 'Библиотека тестирования java-кода', 3, now(), now()),
                   (217, 'Kaspresso', 'Используется собственный форк для проброса информации о шагах тестов в Allure-отчёты', 3, now(), now()),
                   (218, 'Robolectric', 'Библиотека для instrumentation-тестирования Android-приложений', 3, now(), now()),
                   (219, 'Mockk', 'Библиотека описания моков для тестов на Kotlin', 3, now(), now()),
                   (220, 'Mockito', 'Мигрировали 2/3 тестов на Mockk', 3, now(), now()),
                   (221, 'OkHttp', 'Основная библиотека для реализации клиент-серверного взаимодействия', 3, now(), now()),
                   (222, 'ScribeJava', 'Реализация OAuth', 3, now(), now()),
                   (223, 'Multidex', 'Избавились от использования', 3, now(), now()),
                   (224, 'Timber', 'Основная библиотека для логирования', 3, now(), now()),
                   (225, 'Jetpack Compose', 'Реализуем proof of concepts в нашей кодовой базе для оценки возможностей миграции', 3, now(), now()),
                   (226, 'Gson', 'Отказались от использования Gson в пользу kotlinx.serialization', 3, now(), now()),
                   (227, 'kotlinx.serialization', 'Библиотека для сериализации Json', 3, now(), now()),
                   (228, 'Navigation Component', 'Библиотека для описания навигации - используем в приложении дизайн-галереи', 3, now(), now()),
                   (229, 'Hilt', 'Библиотека для описания DI - используем в приложении дизайн-галереи', 3, now(), now()),
                   (230, 'View Binding', 'Все экраны используют View Binding', 3, now(), now()),
                   (231, 'Kotlin', 'Основной ЯП', 4, now(), now()),
                   (232, 'Ruby', 'Используем для написания инфраструктурных скриптов на базе Fastlane', 4, now(), now()),
                   (233, 'fastlane', 'Используем Fastlane для описания инфраструктурных флоу и автоматизаций, часть скрипов шарим с iOS', 4, now(),
                    now()),
                   (234, 'Marathon', 'Раннер для запуска автотестов в параллельном режиме', 4, now(), now()),
                   (235, 'Docker', 'Перевели в Docker все инструменты для CI-сборок', 4, now(), now()),
                   (236, 'Python', 'Python - основной язык для алгоритмов подсчёта различных процессных метрик и автоматизаций для Jira', 4, now(),
                    now()),
                   (237, 'Kotlin Script', 'Постепенно переводим существующие groovy-скрипты на kts', 4, now(), now()),
                   (238, 'Groovy', 'Отказываемся от Groovy скриптов в сторону kts', 4, now(), now()),
                   (239, 'bash',
                    'Используем bash для нескольких базовых скриптов инфраструктуры, но отказались от него как от основного языка в скриптах в пользу Ruby',
                    4, now(), now()),
                   (240, 'detekt', 'За год провели ревизию используемых правил, перешли на detekt "здорового человека"', 4, now(), now()),
                   (241, 'Android Lint', 'Запустили lint-проверки на регулярной основе при сборке PR-ов', 4, now(), now()),
                   (242, 'build-metrics', 'Кастомный Gradle-плагин для измерения скорости сборок с поддержкой configuration cache', 4, now(), now()),
                   (243, 'JDK Desugaring', 'Desugaring фич и JDK для Java 8+', 4, now(), now()),
                   (244, 'Gradle convention-плагины', 'Описываем общую логику gradle-скриптов при помощи convention-плагинов', 4, now(), now()),
                   (245, 'Android ViewBinding', 'Замена kotlinx.synthetics', 4, now(), now()),
                   (246, 'Mainframer', 'Часть разработчиков использует удаленные сборки через Mainframer для увеличения производительности', 4, now(),
                    now()),
                   (247, 'Firebase Remote Config', 'Сервис для хранения некоторых настроек приложения, постепенно уходим от него', 4, now(), now()),
                   (248, 'Firebase Analytics', 'Сервис для работы с аналитикой. Часть аналитики обрабатываем через собственный in-house сервис.', 4,
                    now(), now()),
                   (249, 'Yandex Metrica', 'Сервис для работы с аналитикой', 4, now(), now()),
                   (250, 'MyTracker', 'Сервис для работы с аналитикой', 4, now(), now()),
                   (251, 'Yandex Ad', 'Отображение контекстной рекламы', 4, now(), now()),
                   (252, 'WebIm', 'Сервис для предоставления чата технической поддержки и FAQ', 4, now(), now()),
                   (289, 'Mockk', 'Библиотека описания моков для тестов на Kotlin', 4, now(), now()),
                   (647, 'Дизайн-система', '', 8, now(), now()),
                   (253, 'HMS',
                    'Встроили HMS-сервисы в основные приложения, с возможностью fallback-а на GMS, когда у пользователей есть такая возможность.', 4,
                    now(), now()),
                   (254, 'Firebase Crashlytics', 'Основная система сбора информации о крашах и non fatal-ах', 4, now(), now()),
                   (255, 'Google Auth', 'Один из сервисов авторизации в приложении', 4, now(), now()),
                   (256, 'Firebase Cloud Messaging', 'Основной сервис для отправки push-уведомлений', 4, now(), now()),
                   (257, 'UserX', 'Внедрили сервис UserX-а для получения полезных инсайтов об использовании приложений', 4, now(), now()),
                   (258, 'Firebase App Distribution', 'Использовали для распространения сборок среди тестировщиков, переходим на внутреннюю систему',
                    4, now(), now()),
                   (259, 'Многомодульная архитектура',
                    'Разбиение кодовой базы на независимые Gradle-модули помогает увеличивать связность и уменьшать зацепление', 4, now(), now()),
                   (260, 'Single Activity',
                    'Переход от Activity к фрагментам помог избежать появления неконсистентноо состояния из-за пересозданий процесса', 4, now(),
                    now()),
                   (261, 'MVP', 'Традиционный подход разделения логики Presentation слоя, избавляемся от него в пользу MVVM', 4, now(), now()),
                   (262, 'MVI', 'Подход реализации бизнес логики на основе стейт машины', 4, now(), now()),
                   (263, 'MVVM', 'Подход для реактивного связывания UI с логикой на базе ViewModel и RxJava', 4, now(), now()),
                   (264, 'Unit testing', 'Покрываем unit-тестами сложную бизнес-логику и переходы стейт-машин', 4, now(), now()),
                   (265, 'Test fixtures DSL', 'Подробнее про наш DSL можно почитать вот здесь', 4, now(), now()),
                   (266, 'Instrumentation testing',
                    'Некоторые экраны требуют более тщательной проверки вплоть до надписей и цвета картинок - для таких случаев мы используем этот подход.',
                    4, now(), now()),
                   (267, 'Параллельный запуск UI-тестов',
                    'За год мы увеличили число параллельно запускаемых эмуляторов для ускорения прохождения регрессов наших приложений', 4, now(),
                    now()),
                   (268, 'CI (Bamboo)',
                    'Bamboo по-прежнему является нашим CI-сервером, на котором мы настроили регулярный запуск различных типов сборок', 4, now(),
                    now()),
                   (269, 'Статический анализ',
                    'Статический анализ помогает поддерживать качество кодовой базы и приложений. Мы регулярно пересматриваем и актуализируем список используемых проверок, добавляем новые инструменты.',
                    4, now(), now()),
                   (270, 'Аналитика времени сборки', 'Начали следить за временем сборки приложений, чтобы понимать влияние вносимых изменений', 4,
                    now(), now()),
                   (271, 'Дизайн-система',
                    'Дизайн-система помогает нам описывать переиспользуемые компоненты в коде и поддерживать их актуальность. Мы описали специальное приложение-галерею, в рамках которой пробуем различные библиотеки и новые подходы.',
                    4, now(), now()),
                   (272, 'Автоматизация действий в IDE', 'Реализуем простые автоматизации с помощью плагинов для Android Studio', 4, now(), now()),
                   (273, 'Cookbook', 'Пишем Cookbook для структурированного шаринга best practice''s по работе с проектом между всеми разработчиками',
                    4, now(), now()),
                   (274, 'Moxy', 'MVP Фреймворк, Язык с кодогенерацией для сохранения состояния при смене конфигурации', 4, now(), now()),
                   (275, 'MVI Core', 'Фреймворк от Badoo для реализации паттерна MVI', 4, now(), now()),
                   (276, 'Glide', 'Библиотека для работы с изображениями', 4, now(), now()),
                   (277, 'Retrofit', 'Библиотека для выполнения сетевых запросов', 4, now(), now()),
                   (278, 'Room', 'ORM', 4, now(), now()),
                   (279, 'RxJava 2', 'Реактивно-событийный фреймворк. Используется для связи архитектурных слоев и потоков данных', 4, now(), now()),
                   (280, 'RxBinding', 'Реактивно-событийная обертка над базовыми View', 4, now(), now()),
                   (281, 'Toothpick',
                    'Dependency Injection фрtймворк. Максимально лаконичен при использовании. Использует частичную кодогенерацию и рантайм-построение графа зависимостей.',
                    4, now(), now()),
                   (282, 'Cicerone', 'Библиотека для гибкой реализации навигации, незавязанной полностью на UI-слой', 4, now(), now()),
                   (283, 'RxKotlin', 'Библиотека для Kotlin-синтаксического сахара вокруг RxJava', 4, now(), now()),
                   (284, 'Material Components', 'Библиотека с компонентами для реализации Material Design от Google', 4, now(), now()),
                   (285, 'Junit 4', 'Библиотека тестирования java-кода. Мигрируем на Junit 5', 4, now(), now()),
                   (286, 'Junit 5', 'Библиотека тестирования java-кода', 4, now(), now()),
                   (287, 'Kaspresso', 'Используется собственный форк для проброса информации о шагах тестов в Allure-отчёты', 4, now(), now()),
                   (290, 'Mockito', 'Мигрировали 2/3 тестов на Mockk', 4, now(), now()),
                   (291, 'OkHttp', 'Основная библиотека для реализации клиент-серверного взаимодействия', 4, now(), now()),
                   (292, 'ScribeJava', 'Реализация OAuth', 4, now(), now()),
                   (293, 'Timber', 'Основная библиотека для логирования', 4, now(), now()),
                   (294, 'Jetpack Compose', 'Переходим на Jetpack Compose в новых фичах', 4, now(), now()),
                   (295, 'kotlinx.serialization', 'Библиотека для сериализации Json', 4, now(), now()),
                   (296, 'Babel', 'preset-env на уровне ES2018', 5, now(), now()),
                   (297, 'Bloko', '👍', 5, now(), now()),
                   (298, 'Frontik', '', 5, now(), now()),
                   (299, 'Jest', '', 5, now(), now()),
                   (300, 'LESS', 'Только без фанатизма и вложенных &amp;, их сложнее грепать.', 5, now(), now()),
                   (301, 'Node.js', '', 5, now(), now()),
                   (302, 'React', '', 5, now(), now()),
                   (303, 'Redux', '', 5, now(), now()),
                   (304, 'Tornado', 'gen.coroutine, HTTPError, утилиты. Приложения на Фронтике.', 5, now(), now()),
                   (305, 'Koa',
                    'Когда оценивали альтернативу Фронтику на Node.js, подразумевали в основе Express. Потому что он готовее в этом плане.', 5, now(),
                    now()),
                   (306, 'TypeScript', 'Активно внедряем, есть чемпионское направление.', 5, now(), now()),
                   (307, 'Backbone', '', 5, now(), now()),
                   (308, 'Bootstrap', 'Используется в hh-release, hh-crab.', 5, now(), now()),
                   (309, 'jQuery', 'Старый стек, статьи, шаблоны от подрядчиков. Используем с jquery-migrate.', 5, now(), now()),
                   (310, 'Mustache', 'Клиентская шаблонизация на старом стеке.', 5, now(), now()),
                   (311, 'Raphael', 'Для графиков используем SVG или D3.', 5, now(), now()),
                   (312, 'XSLT', 'Страницы на старом стеке, когда Питон отдаёт XML.', 5, now(), now()),
                   (313, 'Axios', '', 5, now(), now()),
                   (314, 'classnames', '', 5, now(), now()),
                   (315, 'Core.js', 'Нужен даже для новых браузеров.', 5, now(), now()),
                   (316, 'D3', '', 5, now(), now()),
                   (317, 'Enzyme', 'Тестирование с эффектами. Для простых случаев лучше react-test-renderer.', 5, now(), now()),
                   (318, 'lxml', 'Работа с XML в Питоне.', 5, now(), now()),
                   (319, 'prop-types', '', 5, now(), now()),
                   (320, 'react-loadable', '', 5, now(), now()),
                   (321, 'react-router', '', 5, now(), now()),
                   (322, 'react-test-renderer', '', 5, now(), now()),
                   (323, 'react-transition-group', '', 5, now(), now()),
                   (324, 'Terser', 'Сжатие инлайн-JS.', 5, now(), now()),
                   (325, 'date-fns', '', 5, now(), now()),
                   (326, 'final-form', '', 5, now(), now()),
                   (327, 'Firebase', '', 5, now(), now()),
                   (328, 'html-react-parser', '', 5, now(), now()),
                   (329, 'nodemon', 'Запуск lux-server в dev-режиме.', 5, now(), now()),
                   (330, 'react-dropzone', '', 5, now(), now()),
                   (331, 'react-styleguidist',
                    'Документация в Блоко и xhh. Рассматривали Storybook, но не получается удобно встроить примеры и конструкторы для компонентов на двух стеках (реакт и классик).',
                    5, now(), now()),
                   (332, 'CKEditor', 'Нет нормального редактора для реакта.', 5, now(), now()),
                   (333, 'FileAPI', '', 5, now(), now()),
                   (334, 'Handlebars', 'Клиентская шаблонизация на старом стеке.', 5, now(), now()),
                   (335, 'Hogan', 'Клиентская шаблонизация на старом стеке.', 5, now(), now()),
                   (336, 'memoize', '', 5, now(), now()),
                   (337, 'raven', 'См. @sentry/browser', 5, now(), now()),
                   (338, 'Sinon', 'Jest умеет всё что нужно.', 5, now(), now()),
                   (339, 'underscore', 'lodash слишком здоровый. Некоторые функции реализованы в Блоко (debounce, throttle).', 5, now(), now()),
                   (340, 'АНБ', 'Идея из БЭМ, но своя версия именования (без модификаторов). Да и то элементы не пишем.', 5, now(), now()),
                   (341, 'АБ-тесты', '', 5, now(), now()),
                   (342, 'Инлайн-JS', 'Критичный кусок JS вместе с глобальными переменными собираем и кладём отдельно прямо в HTML.', 5, now(),
                    now()),
                   (343, 'Custom fonts',
                    'Proxima Nova Condensed для заголовков через src: url(''data:application/x-font-woff...'') + кэширование CSS со шрифтом в LocalStorage.',
                    5, now(), now()),
                   (344, 'features', 'Фичи выпускаются на прод в закрытом виде либо открытыми определённым пользователям.', 5, now(), now()),
                   (345, 'Flexbox', '', 5, now(), now()),
                   (346, 'gh-pages', 'Документация Блоко, пушится при релизе вместе с пакетом в npm.', 5, now(), now()),
                   (347, 'hhtm-метки', 'Идентификаторы текущей (hhtmSource) и предыдущей (hhtmFrom) страниц для аналитики.', 5, now(), now()),
                   (348, 'JPG', 'Фотографии, баннеры.', 5, now(), now()),
                   (349, 'JSON', 'Новый стек на JSON+React.', 5, now(), now()),
                   (350, 'marisa-trie', 'Хранение переводов.', 5, now(), now()),
                   (351, 'proxy_cache', 'Кэширование средствами Nginx статики в странах (front-by, front-kz), файлов из WebDAV и фоток.', 5, now(),
                    now()),
                   (352, 'Performance API', 'Статистика по загрузке страницы и компонентов, long tasks.', 5, now(), now()),
                   (353, 'PNG', 'Только для точных немногоцветных картинок, где не подходит SVG.', 5, now(), now()),
                   (354, 'react-displayname', 'Добавляем displayName компонентам для вывода в инспекторе продакшн-кода.', 5, now(), now()),
                   (355, 'REST', '', 5, now(), now()),
                   (356, 'sendBeacon', 'Отправка аналитики из браузера.', 5, now(), now()),
                   (357, 'ServiceWorker', 'Кэширование статики (кроме картинок).', 5, now(), now()),
                   (358, 'Source attribute',
                    'Добавляем имя файла и строку Реакт-компонентам (в Бабель-плагине) и HTML-элементам (в XSL-прекомпайле).', 5, now(), now()),
                   (359, 'static-value-extractor',
                    'При сборке статики составляем маппинг компонентов на переводы и настройки, потом используем в Питоне при формировании стейта.',
                    5, now(), now()),
                   (360, 'statsd', 'Отправка аналитики из Питона.', 5, now(), now()),
                   (361, 'SVG', 'Иконки, графики, векторные картинки.', 5, now(), now()),
                   (362, 'Growth Hacking',
                    'Очень быстрый пробный запуск фич силами фронтенда с метриками и обязательным выпиливанием, в случае успеха делаем нормально.', 5,
                    now(), now()),
                   (363, 'SSR',
                    'Питон отправляет url и initialState в lux-server на Koa, запущенный на той же машине, полученный HTML вставляет на страницу вместе со стейтом, Реакт делает гидрейт.',
                    5, now(), now()),
                   (364, 'venv', 'При установке пакета создаётся venv со всеми зависимостями, в котором потом запускаются тесты.', 5, now(), now()),
                   (365, 'XML', 'Старый стек на XML+XSLT.', 5, now(), now()),
                   (366, 'Deb-пакеты', 'Деплой статики в некоторых сервисах, неспешно переводим на MinIO.', 5, now(), now()),
                   (367, 'Autoprefixer', '', 5, now(), now()),
                   (368, 'Bamboo', 'Тесты и проверки в PR, добавление ссылок на PR в задачи.', 5, now(), now()),
                   (369, 'Browserslist', '', 5, now(), now()),
                   (370, 'cssnano', 'Надо вставить в xhh вместо csswring.', 5, now(), now()),
                   (371, 'ESLint', '🔥', 5, now(), now()),
                   (372, 'Figma', '', 5, now(), now()),
                   (373, 'Git', '❤', 5, now(), now()),
                   (374, 'Github', '', 5, now(), now()),
                   (375, 'Gulp', 'Для сложных задач, с которыми не справится Webpack.', 5, now(), now()),
                   (376, 'lint-staged', 'Запуск линтеров с исправлениями только для изменённых файлов.', 5, now(), now()),
                   (377, 'nosetests', '', 5, now(), now()),
                   (378, 'Okmeter',
                    'Метрики First Meaningful Paint (FMP), Time to Interactive (TTI), First Input Delay (FID), количество ошибок, Long tasks, время рендера в Node.js, гидрейта, загрузки страницы, инита компонентов.',
                    5, now(), now()),
                   (379, 'pip', '', 5, now(), now()),
                   (380, 'PostCSS', 'И плагины.', 5, now(), now()),
                   (381, 'Prettier', '🔥', 5, now(), now()),
                   (382, 'Sentry', 'Ошибки из Питона и JS (и других сервисов), автоматическое создание задач.', 5, now(), now()),
                   (383, 'setuptools', '', 5, now(), now()),
                   (384, 'StyleLint', '', 5, now(), now()),
                   (385, 'imagemin', '', 5, now(), now()),
                   (386, 'Webpack', '', 5, now(), now()),
                   (387, 'yarn', '', 5, now(), now()),
                   (388, 'MinIO',
                    'Хранение архива со статикой (yarn build-static собирает архив, hh-build проставляет версию и заливает в MinIO, потом архив раскатывается на front и раздаётся Nginx''ом).',
                    5, now(), now()),
                   (389, 'Яндекс.Метрика', 'Пользуется маркетинг, заказчики, некоторые аналитики.', 5, now(), now()),
                   (390, 'Google Analytics', 'Пользуется маркетинг, заказчики, некоторые аналитики. Много старых событий, которые нельзя удалить.', 5,
                    now(), now()),
                   (391, 'Husky', 'Заменяется копированием githooks/pre-commit в .git/hooks в postinstall-скрипте, а в хуке yarn lint-staged.', 5,
                    now(), now()),
                   (392, 'npm', 'Везде перешли на yarn.', 5, now(), now()),
                   (393, 'Babel', 'preset-env на уровне ES2018', 6, now(), now()),
                   (394, 'Bloko', '👍', 6, now(), now()),
                   (395, 'Frontik', '', 6, now(), now()),
                   (396, 'Jest', '', 6, now(), now()),
                   (397, 'LESS', 'Только без фанатизма и вложенных &amp;, их сложнее грепать.', 6, now(), now()),
                   (398, 'Node.js', '', 6, now(), now()),
                   (399, 'React', '', 6, now(), now()),
                   (400, 'Redux', '', 6, now(), now()),
                   (401, 'Tornado', 'gen.coroutine, HTTPError, утилиты. Приложения на Фронтике.', 6, now(), now()),
                   (402, 'Koa',
                    'Когда оценивали альтернативу Фронтику на Node.js, подразумевали в основе Express. Потому что он готовее в этом плане.', 6, now(),
                    now()),
                   (403, 'TypeScript', 'Планируем внедрять, есть чемпионское направление.', 6, now(), now()),
                   (404, 'Backbone', '', 6, now(), now()),
                   (405, 'Bootstrap', 'Используется в hh-release, hh-crab.', 6, now(), now()),
                   (406, 'jQuery', 'Старый стек, статьи, шаблоны от подрядчиков. Используем с jquery-migrate.', 6, now(), now()),
                   (407, 'Mustache', 'Клиентская шаблонизация на старом стеке.', 6, now(), now()),
                   (408, 'Raphael', 'Для графиков используем SVG или D3.', 6, now(), now()),
                   (409, 'XSLT', 'Страницы на старом стеке, когда Питон отдаёт XML.', 6, now(), now()),
                   (410, 'Axios', '', 6, now(), now()),
                   (411, 'classnames', '', 6, now(), now()),
                   (412, 'Core.js', 'Нужен даже для новых браузеров.', 6, now(), now()),
                   (413, 'D3', '', 6, now(), now()),
                   (414, 'Enzyme', 'Тестирование с эффектами. Для простых случаев лучше react-test-renderer.', 6, now(), now()),
                   (415, 'lxml', 'Работа с XML в Питоне.', 6, now(), now()),
                   (416, 'prop-types', '', 6, now(), now()),
                   (417, 'react-loadable', '', 6, now(), now()),
                   (418, 'react-router', '', 6, now(), now()),
                   (419, 'react-test-renderer', '', 6, now(), now()),
                   (420, 'react-transition-group', '', 6, now(), now()),
                   (421, 'Terser', 'Сжатие инлайн-JS.', 6, now(), now()),
                   (422, 'date-fns', '', 6, now(), now()),
                   (423, 'final-form', '', 6, now(), now()),
                   (424, 'Firebase', '', 6, now(), now()),
                   (425, 'html-react-parser', '', 6, now(), now()),
                   (426, 'nodemon', 'Запуск lux-server в dev-режиме.', 6, now(), now()),
                   (427, 'react-dropzone', '', 6, now(), now()),
                   (428, 'react-styleguidist',
                    'Документация в Блоко и xhh. Рассматривали Storybook, но не получается удобно встроить примеры и конструкторы для компонентов на двух стеках (реакт и классик).',
                    6, now(), now()),
                   (429, 'CKEditor', 'Нет нормального редактора для реакта.', 6, now(), now()),
                   (430, 'FileAPI', '', 6, now(), now()),
                   (431, 'Handlebars', 'Клиентская шаблонизация на старом стеке.', 6, now(), now()),
                   (432, 'Hogan', 'Клиентская шаблонизация на старом стеке.', 6, now(), now()),
                   (433, 'memoize', '', 6, now(), now()),
                   (434, 'raven', 'См. @sentry/browser', 6, now(), now()),
                   (435, 'Sinon', 'Jest умеет всё что нужно.', 6, now(), now()),
                   (436, 'underscore', 'lodash слишком здоровый. Некоторые функции реализованы в Блоко (debounce, throttle).', 6, now(), now()),
                   (437, 'АНБ', 'Идея из БЭМ, но своя версия именования (без модификаторов). Да и то элементы не пишем.', 6, now(), now()),
                   (438, 'АБ-тесты', '', 6, now(), now()),
                   (439, 'Инлайн-JS', 'Критичный кусок JS вместе с глобальными переменными собираем и кладём отдельно прямо в HTML.', 6, now(),
                    now()),
                   (440, 'Custom fonts',
                    'Proxima Nova Condensed для заголовков через src: url(''data:application/x-font-woff...'') + кэширование CSS со шрифтом в LocalStorage.',
                    6, now(), now()),
                   (441, 'features', 'Фичи выпускаются на прод в закрытом виде либо открытыми определённым пользователям.', 6, now(), now()),
                   (442, 'Flexbox', '', 6, now(), now()),
                   (443, 'gh-pages', 'Документация Блоко, пушится при релизе вместе с пакетом в npm.', 6, now(), now()),
                   (444, 'hhtm-метки', 'Идентификаторы текущей (hhtmSource) и предыдущей (hhtmFrom) страниц для аналитики.', 6, now(), now()),
                   (445, 'JPG', 'Фотографии, баннеры.', 6, now(), now()),
                   (446, 'JSON', 'Новый стек на JSON+React.', 6, now(), now()),
                   (447, 'marisa-trie', 'Хранение переводов.', 6, now(), now()),
                   (448, 'proxy_cache', 'Кэширование средствами Nginx статики в странах (front-by, front-kz), файлов из WebDAV и фоток.', 6, now(),
                    now()),
                   (449, 'Performance API', 'Статистика по загрузке страницы и компонентов, long tasks.', 6, now(), now()),
                   (450, 'PNG', 'Только для точных немногоцветных картинок, где не подходит SVG.', 6, now(), now()),
                   (451, 'react-displayname', 'Добавляем displayName компонентам для вывода в инспекторе продакшн-кода.', 6, now(), now()),
                   (452, 'REST', '', 6, now(), now()),
                   (453, 'sendBeacon', 'Отправка аналитики из браузера.', 6, now(), now()),
                   (454, 'ServiceWorker', 'Кэширование статики (кроме картинок).', 6, now(), now()),
                   (455, 'Source attribute',
                    'Добавляем имя файла и строку Реакт-компонентам (в Бабель-плагине) и HTML-элементам (в XSL-прекомпайле).', 6, now(), now()),
                   (456, 'static-value-extractor',
                    'При сборке статики составляем маппинг компонентов на переводы и настройки, потом используем в Питоне при формировании стейта.',
                    6, now(), now()),
                   (457, 'statsd', 'Отправка аналитики из Питона.', 6, now(), now()),
                   (458, 'SVG', 'Иконки, графики, векторные картинки.', 6, now(), now()),
                   (459, 'Growth Hacking',
                    'Очень быстрый пробный запуск фич силами фронтенда с метриками и обязательным выпиливанием, в случае успеха делаем нормально.', 6,
                    now(), now()),
                   (460, 'SSR',
                    'Питон отправляет url и initialState в lux-server на Koa, запущенный на той же машине, полученный HTML вставляет на страницу вместе со стейтом, Реакт делает гидрейт.',
                    6, now(), now()),
                   (521, 'Mantis', 'Редактирование изображений', 7, now(), now()),
                   (461, 'venv', 'При установке пакета создаётся venv со всеми зависимостями, в котором потом запускаются тесты.', 6, now(), now()),
                   (462, 'XML', 'Старый стек на XML+XSLT.', 6, now(), now()),
                   (463, 'Deb-пакеты', 'Деплой статики в некоторых сервисах, неспешно переводим на MinIO.', 6, now(), now()),
                   (464, 'Autoprefixer', '', 6, now(), now()),
                   (465, 'Bamboo', 'Тесты и проверки в PR, добавление ссылок на PR в задачи.', 6, now(), now()),
                   (466, 'Browserslist', '', 6, now(), now()),
                   (467, 'cssnano', 'Надо вставить в xhh вместо csswring.', 6, now(), now()),
                   (468, 'ESLint', '🔥', 6, now(), now()),
                   (469, 'Figma', '', 6, now(), now()),
                   (470, 'Git', '❤', 6, now(), now()),
                   (471, 'Github', '', 6, now(), now()),
                   (472, 'Gulp', 'Для сложных задач, с которыми не справится Webpack.', 6, now(), now()),
                   (473, 'lint-staged', 'Запуск линтеров с исправлениями только для изменённых файлов.', 6, now(), now()),
                   (474, 'nosetests', '', 6, now(), now()),
                   (475, 'Okmeter',
                    'Метрики First Meaningful Paint (FMP), Time to Interactive (TTI), First Input Delay (FID), количество ошибок, Long tasks, время рендера в Node.js, гидрейта, загрузки страницы, инита компонентов.',
                    6, now(), now()),
                   (476, 'pip', '', 6, now(), now()),
                   (477, 'PostCSS', 'И плагины.', 6, now(), now()),
                   (478, 'Prettier', '🔥', 6, now(), now()),
                   (479, 'Sentry', 'Ошибки из Питона и JS (и других сервисов), автоматическое создание задач.', 6, now(), now()),
                   (480, 'setuptools', '', 6, now(), now()),
                   (481, 'StyleLint', '', 6, now(), now()),
                   (482, 'imagemin', '', 6, now(), now()),
                   (483, 'Webpack', '', 6, now(), now()),
                   (484, 'yarn', '', 6, now(), now()),
                   (485, 'MinIO',
                    'Хранение архива со статикой (yarn build-static собирает архив, hh-build проставляет версию и заливает в MinIO, потом архив раскатывается на front и раздаётся Nginx''ом).',
                    6, now(), now()),
                   (486, 'Яндекс.Метрика', 'Пользуется маркетинг, заказчики, некоторые аналитики.', 6, now(), now()),
                   (487, 'Google Analytics', 'Пользуется маркетинг, заказчики, некоторые аналитики. Много старых событий, которые нельзя удалить.', 6,
                    now(), now()),
                   (488, 'Husky', 'Заменяется копированием githooks/pre-commit в .git/hooks в postinstall-скрипте, а в хуке yarn lint-staged.', 6,
                    now(), now()),
                   (489, 'npm', 'Везде перешли на yarn.', 6, now(), now()),
                   (490, 'Swift', 'Язык программирования приложения', 7, now(), now()),
                   (491, 'Ruby', 'Язык программирования скриптов CI / CD', 7, now(), now()),
                   (492, 'Objective-C', 'Язык программирования приложения, исключительно legacy-код', 7, now(), now()),
                   (493, 'Tuist', 'Генерация Xcode проекта', 7, now(), now()),
                   (494, 'SwiftLint', 'Статический анализ Swift-кода', 7, now(), now()),
                   (495, 'SwiftGen', 'Генерация интерфейса доступа к ресурсам', 7, now(), now()),
                   (496, 'Sourcery', 'Генерация boilerplate-кода', 7, now(), now()),
                   (497, 'FigmaGen', 'Генерация стилей из Figma', 7, now(), now()),
                   (498, 'Fugen', 'Экспорт ресурсов из Figma с генерацией интерфейса доступа', 7, now(), now()),
                   (499, 'fastlane', 'Скрипты CI / CD', 7, now(), now()),
                   (500, 'Carthage', 'Менеджер сторонних зависимостей', 7, now(), now()),
                   (501, 'Swift Package Manager', 'Менеджер сторонних зависимостей', 7, now(), now()),
                   (502, 'Bundler', 'Менеджер Ruby-зависимостей', 7, now(), now()),
                   (503, 'rbenv', 'Менеджер версий Ruby', 7, now(), now()),
                   (504, 'Mint', 'Менеджер инструментов на Swift', 7, now(), now()),
                   (505, 'XCLogParser', 'Анализ времени сборки', 7, now(), now()),
                   (506, 'Periphery', 'Статический анализ неиспользуемого Swift-кода', 7, now(), now()),
                   (507, 'Danger', 'Автоматизация ревью PR', 7, now(), now()),
                   (508, 'RuboCop', 'Статический анализ Ruby-кода', 7, now(), now()),
                   (509, '1PasswordExtension', 'Автозаполнение данных авторизации из 1Password', 7, now(), now()),
                   (510, 'Alamofire 4', 'Выполнение HTTP запросов', 7, now(), now()),
                   (511, 'Alamofire 5', 'Выполнение HTTP запросов', 7, now(), now()),
                   (512, 'BSKeyboardControls', 'Вспомогательные кнопки клавиатуры для навигация между полями ввода', 7, now(), now()),
                   (513, 'CoreData', 'Хранение данных в БД', 7, now(), now()),
                   (514, 'DictionaryCoder', 'Кодирование структур в словари и обратно', 7, now(), now()),
                   (515, 'DifferenceKit', 'Вычисление разницы в ячейках для обновления коллекций', 7, now(), now()),
                   (516, 'Down', 'Рендеринг Markdown в html', 7, now(), now()),
                   (517, 'FMDB', 'Хранение простых типов данных в БД', 7, now(), now()),
                   (518, 'iOSSnapshotTestCase', 'Снэпшот-тестирование', 7, now(), now()),
                   (519, 'libPhoneNumber', 'Форматирование номера телефона', 7, now(), now()),
                   (520, 'Lottie', 'Векторная анимация', 7, now(), now()),
                   (522, 'MBProgressHUD', 'Диалоги с индикатором загрузки', 7, now(), now()),
                   (523, 'Nivelir', 'DSL для навигации между экранами', 7, now(), now()),
                   (524, 'NotificationBanner', 'Выпадающие оповещения', 7, now(), now()),
                   (525, 'Combine', 'Обработка асинхронных потоков данных', 7, now(), now()),
                   (526, 'PhoneNumberKit', 'Форматирование номера телефона', 7, now(), now()),
                   (527, 'PromiseKit', 'Выполнение асинхронных операций', 7, now(), now()),
                   (528, 'PureLayout', 'DSL для верстки UI-компонентов', 7, now(), now()),
                   (529, 'SDWebImage', 'Загрузка и кэширование изображений', 7, now(), now()),
                   (530, 'Shuffle', 'Свайпы карточек в стиле Tinder', 7, now(), now()),
                   (531, 'SideMenu', 'Боковое меню', 7, now(), now()),
                   (532, 'SnapKit', 'DSL для верстки UI-компонентов', 7, now(), now()),
                   (533, 'SQLite', 'Хранение простых типов данных в БД', 7, now(), now()),
                   (534, 'SwipeCellKit', 'Поддержка свайпов ячеек', 7, now(), now()),
                   (535, 'TTTAttributedLabel', 'Расширение возможностей UILabel', 7, now(), now()),
                   (536, 'Starscream', 'Web-сокеты', 7, now(), now()),
                   (537, 'GDPerformanceView', 'Мониторинг нагрузки (FPS, память)', 7, now(), now()),
                   (538, 'ZipArchive', 'Распаковка файлов из zip-архивов', 7, now(), now()),
                   (539, 'ImageViewer', 'Просмотр изображений', 7, now(), now()),
                   (540, 'Typist', 'Обработка появления клавиатуры', 7, now(), now()),
                   (541, 'Cosmos', 'UI-компонент для рейтинга приложения', 7, now(), now()),
                   (542, 'PanModal', 'Отображение экранов в виде bottom sheet', 7, now(), now()),
                   (543, 'XMLCoder', 'Кодирование структур в XML и обратно', 7, now(), now()),
                   (544, 'Bamboo', 'Сервер CI / CD', 7, now(), now()),
                   (545, 'Facebook', 'Авторизация через соц. сеть и аналитика событий', 7, now(), now()),
                   (546, 'Firebase App Distribution', 'Распространение AdHoc сборок приложения', 7, now(), now()),
                   (547, 'Firebase Crashlytics', 'Аналитика крашей', 7, now(), now()),
                   (548, 'Firebase Remote Config', 'Удаленная конфигурация приложения', 7, now(), now()),
                   (549, 'GitHub', 'Хостинг репозитория проекта', 7, now(), now()),
                   (550, 'Google Analytics', 'Внешняя аналитика событий', 7, now(), now()),
                   (551, 'Google Maps', 'Карты на экранах вакансий', 7, now(), now()),
                   (552, 'Google Places', 'Геокодирование', 7, now(), now()),
                   (553, 'myTarget', 'Реклама', 7, now(), now()),
                   (554, 'myTracker', 'Внешняя аналитика событий', 7, now(), now()),
                   (555, 'Odnoklassniki', 'Авторизация через соц. сеть', 7, now(), now()),
                   (556, 'VK', 'Авторизация через соц. сеть', 7, now(), now()),
                   (557, 'Webim', 'Чат технической поддержки', 7, now(), now()),
                   (558, 'Yandex Ads', 'Реклама', 7, now(), now()),
                   (559, 'Yandex AppMetrica', 'Внешняя аналитика событий и крашей', 7, now(), now()),
                   (560, 'AutoLayout', 'Верстка UI-компонентов', 7, now(), now()),
                   (561, 'DI', 'Собственная протоколо-ориентированная реализация', 7, now(), now()),
                   (562, 'Diffable-коллекции', 'Собственная реализация DiffableDataSource для iOS &lt; 13', 7, now(), now()),
                   (563, 'MVI', 'Реализация бизнес-логики на основе стейт машины', 7, now(), now()),
                   (564, 'MVVM', 'Архитектура presentation-слоя', 7, now(), now()),
                   (565, 'SwiftUI', 'Верстка UI-компонентов', 7, now(), now()),
                   (566, 'UI-тестирование', '', 7, now(), now()),
                   (567, 'Unit-тестирование', '', 7, now(), now()),
                   (568, 'VIPER', 'Архитектура presentation-слоя', 7, now(), now()),
                   (569, 'Xcode Interface Builder', 'Верстка UI-компонентов', 7, now(), now()),
                   (570, 'Аналитика времени сборки', '', 7, now(), now()),
                   (571, 'Дизайн-система', '', 7, now(), now()),
                   (572, 'Микрофичевая архитектура', 'Разделение кодовой базы на независимые модули', 7, now(), now()),
                   (573, 'Swift', 'Язык программирования приложения', 8, now(), now()),
                   (574, 'Ruby', 'Язык программирования скриптов CI / CD', 8, now(), now()),
                   (575, 'Objective-C', 'Язык программирования приложения, в одном legacy модуле', 8, now(), now()),
                   (576, 'Tuist', 'Генерация Xcode проекта', 8, now(), now()),
                   (577, 'SwiftLint', 'Статический анализ Swift-кода', 8, now(), now()),
                   (578, 'SwiftGen', 'Генерация интерфейса доступа к ресурсам', 8, now(), now()),
                   (579, 'Sourcery', 'Генерация boilerplate-кода', 8, now(), now()),
                   (580, 'FigmaGen', 'Генерация стилей из Figma', 8, now(), now()),
                   (581, 'Fugen', 'Экспорт ресурсов из Figma с генерацией интерфейса доступа', 8, now(), now()),
                   (582, 'fastlane', 'Скрипты CI / CD', 8, now(), now()),
                   (583, 'Carthage', 'Менеджер сторонних зависимостей', 8, now(), now()),
                   (584, 'Swift Package Manager', 'Менеджер сторонних зависимостей', 8, now(), now()),
                   (585, 'Bundler', 'Менеджер Ruby-зависимостей', 8, now(), now()),
                   (586, 'rbenv', 'Менеджер версий Ruby', 8, now(), now()),
                   (587, 'Mint', 'Менеджер инструментов на Swift', 8, now(), now()),
                   (588, 'XCLogParser', 'Анализ времени сборки', 8, now(), now()),
                   (589, 'Periphery', 'Статический анализ неиспользуемого Swift-кода', 8, now(), now()),
                   (590, 'Danger', 'Автоматизация ревью PR', 8, now(), now()),
                   (591, 'RuboCop', 'Статический анализ Ruby-кода', 8, now(), now()),
                   (592, '1PasswordExtension', 'Автозаполнение данных авторизации из 1Password', 8, now(), now()),
                   (593, 'Alamofire 4', 'Выполнение HTTP запросов', 8, now(), now()),
                   (594, 'Alamofire 5', 'Выполнение HTTP запросов', 8, now(), now()),
                   (595, 'CoreData', 'Хранение данных в БД', 8, now(), now()),
                   (596, 'DictionaryCoder', 'Кодирование структур в словари и обратно', 8, now(), now()),
                   (597, 'DifferenceKit', 'Вычисление разницы в ячейках для обновления коллекций', 8, now(), now()),
                   (598, 'Down', 'Рендеринг Markdown в html', 8, now(), now()),
                   (599, 'Mantis', 'Редактирование изображений', 8, now(), now()),
                   (600, 'Nivelir', 'DSL для навигации между экранами', 8, now(), now()),
                   (601, 'NotificationBanner', 'Выпадающие оповещения', 8, now(), now()),
                   (602, 'OpenCombine', 'Обработка асинхронных потоков данных. Занимаемся переходом на нативный', 8, now(), now()),
                   (603, 'PhoneNumberKit', 'Форматирование номера телефона', 8, now(), now()),
                   (604, 'PureLayout', 'DSL для верстки UI-компонентов', 8, now(), now()),
                   (605, 'SDWebImage', 'Загрузка и кэширование изображений', 8, now(), now()),
                   (606, 'Shuffle', 'Свайпы карточек в стиле Tinder', 8, now(), now()),
                   (607, 'SideMenu', 'Боковое меню', 8, now(), now()),
                   (608, 'SnapKit', 'DSL для верстки UI-компонентов', 8, now(), now()),
                   (609, 'SQLite', 'Хранение простых типов данных в БД', 8, now(), now()),
                   (610, 'SwipeCellKit', 'Поддержка свайпов ячеек', 8, now(), now()),
                   (611, 'TTTAttributedLabel', 'Расширение возможностей UILabel', 8, now(), now()),
                   (612, 'Starscream', 'Web-сокеты', 8, now(), now()),
                   (613, 'GDPerformanceView', 'Мониторинг нагрузки (FPS, память)', 8, now(), now()),
                   (614, 'ZipArchive', 'Распаковка файлов из zip-архивов', 8, now(), now()),
                   (615, 'ImageViewer', 'Просмотр изображений', 8, now(), now()),
                   (616, 'Typist', 'Обработка появления клавиатуры', 8, now(), now()),
                   (617, 'Cosmos', 'UI-компонент для рейтинга приложения', 8, now(), now()),
                   (618, 'XMLCoder', 'Кодирование структур в XML и обратно', 8, now(), now()),
                   (619, 'UXFeedback', 'Сбор обратной связи от пользователя', 8, now(), now()),
                   (620, 'Bamboo', 'Сервер CI / CD', 8, now(), now()),
                   (621, 'Firebase App Distribution',
                    'Распространение AdHoc сборок приложения. В данный момент недоступно без VPN, распространяем через свой сервис.', 8, now(),
                    now()),
                   (622, 'Firebase Crashlytics', 'Аналитика крашей', 8, now(), now()),
                   (623, 'Firebase Remote Config', 'Удаленная конфигурация приложения', 8, now(), now()),
                   (624, 'GitHub', 'Хостинг репозитория проекта', 8, now(), now()),
                   (625, 'Google Analytics', 'Внешняя аналитика событий', 8, now(), now()),
                   (626, 'Google Maps', 'Карты на экранах вакансий. Переходим на Yandex', 8, now(), now()),
                   (627, 'Google Places', 'Геокодирование. Переходим на Yandex', 8, now(), now()),
                   (628, 'Yandex Maps', 'Карты на замену Google Maps', 8, now(), now()),
                   (629, 'myTarget', 'Реклама', 8, now(), now()),
                   (630, 'myTracker', 'Внешняя аналитика событий', 8, now(), now()),
                   (631, 'Odnoklassniki', 'Авторизация через соц. сеть', 8, now(), now()),
                   (632, 'VK', 'Авторизация через соц. сеть', 8, now(), now()),
                   (633, 'Webim', 'Чат технической поддержки', 8, now(), now()),
                   (634, 'Yandex Ads', 'Реклама', 8, now(), now()),
                   (635, 'Yandex AppMetrica', 'Внешняя аналитика событий и крашей', 8, now(), now()),
                   (636, 'AutoLayout', 'Верстка UI-компонентов', 8, now(), now()),
                   (637, 'DI', 'Собственная протоколо-ориентированная реализация', 8, now(), now()),
                   (638, 'Diffable-коллекции', 'Собственная реализация DiffableDataSource для iOS &lt; 13', 8, now(), now()),
                   (639, 'MVI', 'Реализация бизнес-логики на основе стейт машины', 8, now(), now()),
                   (640, 'MVVM', 'Архитектура presentation-слоя', 8, now(), now()),
                   (641, 'SwiftUI', 'Верстка UI-компонентов', 8, now(), now()),
                   (642, 'Swift Concurrency', 'Работа с асинхронным кодом', 8, now(), now()),
                   (643, 'UI-тестирование', '', 8, now(), now()),
                   (644, 'Unit-тестирование', '', 8, now(), now()),
                   (645, 'VIPER', 'Архитектура presentation-слоя', 8, now(), now()),
                   (646, 'Аналитика времени сборки', '', 8, now(), now()),
                   (648, 'Микрофичевая архитектура', 'Разделение кодовой базы на независимые модули', 8, now(), now()),
                   (649, 'MY_COOL_BLIP', '', 1, '2024-04-11 22:21:08.188751', '2024-04-11 22:21:08.188751');
            SELECT setval('blip_blip_id_seq', (SELECT max(blip_id) FROM blip));

            INSERT INTO blip_event (blip_event_id, parent_id, blip_id, quadrant_id, ring_id, author_id, radar_id, creation_time, last_change_time)
            VALUES (1, NULL, NULL, NULL, NULL, 1, 1, now(), now()),
                   (2, 1, 1, 1, 1, 1, 1, now(), now()),
                   (3, 2, 2, 1, 1, 1, 1, now(), now()),
                   (4, 3, 3, 1, 1, 1, 1, now(), now()),
                   (5, 4, 4, 1, 2, 1, 1, now(), now()),
                   (6, 5, 5, 1, 1, 1, 1, now(), now()),
                   (7, 6, 6, 1, 1, 1, 1, now(), now()),
                   (8, 7, 7, 1, 1, 1, 1, now(), now()),
                   (9, 8, 8, 1, 1, 1, 1, now(), now()),
                   (10, 9, 9, 1, 1, 1, 1, now(), now()),
                   (11, 10, 10, 1, 2, 1, 1, now(), now()),
                   (12, 11, 11, 1, 3, 1, 1, now(), now()),
                   (13, 12, 12, 1, 1, 1, 1, now(), now()),
                   (14, 13, 13, 1, 1, 1, 1, now(), now()),
                   (15, 14, 14, 1, 1, 1, 1, now(), now()),
                   (16, 15, 15, 1, 1, 1, 1, now(), now()),
                   (17, 16, 16, 1, 1, 1, 1, now(), now()),
                   (18, 17, 17, 1, 2, 1, 1, now(), now()),
                   (19, 18, 18, 1, 3, 1, 1, now(), now()),
                   (20, 19, 19, 2, 1, 1, 1, now(), now()),
                   (21, 20, 20, 2, 2, 1, 1, now(), now()),
                   (22, 21, 21, 2, 2, 1, 1, now(), now()),
                   (23, 22, 22, 2, 2, 1, 1, now(), now()),
                   (24, 23, 23, 2, 4, 1, 1, now(), now()),
                   (25, 24, 24, 2, 5, 1, 1, now(), now()),
                   (26, 25, 25, 2, 1, 1, 1, now(), now()),
                   (27, 26, 26, 2, 2, 1, 1, now(), now()),
                   (28, 27, 27, 2, 2, 1, 1, now(), now()),
                   (29, 28, 28, 3, 1, 1, 1, now(), now()),
                   (30, 29, 29, 3, 1, 1, 1, now(), now()),
                   (31, 30, 30, 3, 1, 1, 1, now(), now()),
                   (32, 31, 31, 3, 1, 1, 1, now(), now()),
                   (33, 32, 32, 3, 1, 1, 1, now(), now()),
                   (34, 33, 33, 3, 1, 1, 1, now(), now()),
                   (35, 34, 34, 3, 1, 1, 1, now(), now()),
                   (36, 35, 35, 3, 5, 1, 1, now(), now()),
                   (37, 36, 36, 3, 1, 1, 1, now(), now()),
                   (38, 37, 37, 3, 1, 1, 1, now(), now()),
                   (39, 38, 38, 3, 1, 1, 1, now(), now()),
                   (40, 39, 39, 3, 1, 1, 1, now(), now()),
                   (41, 40, 40, 3, 1, 1, 1, now(), now()),
                   (42, 41, 41, 3, 1, 1, 1, now(), now()),
                   (43, 42, 42, 4, 1, 1, 1, now(), now()),
                   (44, 43, 43, 4, 1, 1, 1, now(), now()),
                   (45, 44, 44, 4, 1, 1, 1, now(), now()),
                   (46, 45, 45, 4, 1, 1, 1, now(), now()),
                   (47, 46, 46, 4, 1, 1, 1, now(), now()),
                   (48, 47, 47, 4, 3, 1, 1, now(), now()),
                   (49, 48, 48, 4, 1, 1, 1, now(), now()),
                   (50, 49, 49, 4, 1, 1, 1, now(), now()),
                   (51, 50, 50, 4, 1, 1, 1, now(), now()),
                   (52, 51, 51, 4, 5, 1, 1, now(), now()),
                   (53, 52, 52, 4, 1, 1, 1, now(), now()),
                   (54, 53, 53, 4, 1, 1, 1, now(), now()),
                   (55, 54, 54, 4, 1, 1, 1, now(), now()),
                   (56, 55, 55, 4, 1, 1, 1, now(), now()),
                   (57, 56, 56, 4, 5, 1, 1, now(), now()),
                   (58, 57, 57, 4, 1, 1, 1, now(), now()),
                   (59, 58, 58, 4, 1, 1, 1, now(), now()),
                   (60, 59, 59, 4, 1, 1, 1, now(), now()),
                   (61, 60, 60, 4, 5, 1, 1, now(), now()),
                   (62, 61, 61, 4, 5, 1, 1, now(), now()),
                   (63, 62, 62, 4, 3, 1, 1, now(), now()),
                   (64, 63, 63, 4, 3, 1, 1, now(), now()),
                   (65, 64, 64, 4, 3, 1, 1, now(), now()),
                   (66, 65, 65, 4, 2, 1, 1, now(), now()),
                   (67, 66, 66, 4, 1, 1, 1, now(), now()),
                   (68, 67, 67, 4, 2, 1, 1, now(), now()),
                   (69, 68, 68, 4, 1, 1, 1, now(), now()),
                   (70, 69, 69, 4, 1, 1, 1, now(), now()),
                   (71, 70, 70, 4, 2, 1, 1, now(), now()),
                   (72, 71, 71, 4, 1, 1, 1, now(), now()),
                   (73, 72, 72, 4, 1, 1, 1, now(), now()),
                   (74, 73, 73, 4, 1, 1, 1, now(), now()),
                   (75, 74, 74, 4, 1, 1, 1, now(), now()),
                   (76, 75, 75, 4, 1, 1, 1, now(), now()),
                   (77, 76, 76, 4, 5, 1, 1, now(), now()),
                   (78, 77, 76, 1, 1, 1, 1, now(), now()),
                   (79, NULL, NULL, NULL, NULL, 1, 2, now(), now()),
                   (80, 79, 78, 5, 6, 1, 2, now(), now()),
                   (81, 80, 79, 5, 6, 1, 2, now(), now()),
                   (82, 81, 80, 5, 7, 1, 2, now(), now()),
                   (83, 82, 81, 5, 6, 1, 2, now(), now()),
                   (84, 83, 82, 5, 7, 1, 2, now(), now()),
                   (85, 84, 83, 5, 6, 1, 2, now(), now()),
                   (86, 85, 84, 5, 6, 1, 2, now(), now()),
                   (87, 86, 85, 5, 6, 1, 2, now(), now()),
                   (88, 87, 86, 5, 6, 1, 2, now(), now()),
                   (89, 88, 87, 5, 6, 1, 2, now(), now()),
                   (90, 89, 88, 5, 7, 1, 2, now(), now()),
                   (91, 90, 89, 5, 8, 1, 2, now(), now()),
                   (92, 91, 90, 5, 6, 1, 2, now(), now()),
                   (93, 92, 91, 5, 6, 1, 2, now(), now()),
                   (94, 93, 92, 5, 6, 1, 2, now(), now()),
                   (95, 94, 93, 5, 6, 1, 2, now(), now()),
                   (96, 95, 94, 5, 6, 1, 2, now(), now()),
                   (97, 96, 95, 5, 7, 1, 2, now(), now()),
                   (98, 97, 96, 5, 8, 1, 2, now(), now()),
                   (99, 98, 97, 6, 6, 1, 2, now(), now()),
                   (100, 99, 98, 6, 7, 1, 2, now(), now()),
                   (101, 100, 99, 6, 7, 1, 2, now(), now()),
                   (102, 101, 100, 6, 7, 1, 2, now(), now()),
                   (103, 102, 101, 6, 6, 1, 2, now(), now()),
                   (104, 103, 102, 6, 7, 1, 2, now(), now()),
                   (105, 104, 103, 6, 7, 1, 2, now(), now()),
                   (106, 105, 104, 6, 9, 1, 2, now(), now()),
                   (107, 106, 105, 7, 6, 1, 2, now(), now()),
                   (108, 107, 106, 7, 6, 1, 2, now(), now()),
                   (109, 108, 107, 7, 6, 1, 2, now(), now()),
                   (110, 109, 108, 7, 6, 1, 2, now(), now()),
                   (111, 110, 109, 7, 6, 1, 2, now(), now()),
                   (112, 111, 110, 7, 6, 1, 2, now(), now()),
                   (113, 112, 111, 7, 6, 1, 2, now(), now()),
                   (114, 113, 112, 7, 10, 1, 2, now(), now()),
                   (115, 114, 113, 7, 6, 1, 2, now(), now()),
                   (116, 115, 114, 7, 6, 1, 2, now(), now()),
                   (117, 116, 115, 7, 6, 1, 2, now(), now()),
                   (118, 117, 116, 7, 6, 1, 2, now(), now()),
                   (119, 118, 117, 7, 6, 1, 2, now(), now()),
                   (120, 119, 118, 7, 6, 1, 2, now(), now()),
                   (121, 120, 119, 8, 6, 1, 2, now(), now()),
                   (122, 121, 120, 8, 6, 1, 2, now(), now()),
                   (123, 122, 121, 8, 6, 1, 2, now(), now()),
                   (124, 123, 122, 8, 6, 1, 2, now(), now()),
                   (125, 124, 123, 8, 6, 1, 2, now(), now()),
                   (126, 125, 124, 8, 8, 1, 2, now(), now()),
                   (127, 126, 125, 8, 6, 1, 2, now(), now()),
                   (128, 127, 126, 8, 6, 1, 2, now(), now()),
                   (129, 128, 127, 8, 6, 1, 2, now(), now()),
                   (130, 129, 128, 8, 10, 1, 2, now(), now()),
                   (131, 130, 129, 8, 6, 1, 2, now(), now()),
                   (132, 131, 130, 8, 6, 1, 2, now(), now()),
                   (133, 132, 131, 8, 6, 1, 2, now(), now()),
                   (134, 133, 132, 8, 6, 1, 2, now(), now()),
                   (135, 134, 133, 8, 6, 1, 2, now(), now()),
                   (136, 135, 134, 8, 10, 1, 2, now(), now()),
                   (137, 136, 135, 8, 6, 1, 2, now(), now()),
                   (138, 137, 136, 8, 6, 1, 2, now(), now()),
                   (139, 138, 137, 8, 6, 1, 2, now(), now()),
                   (140, 139, 138, 8, 10, 1, 2, now(), now()),
                   (141, 140, 139, 8, 10, 1, 2, now(), now()),
                   (142, 141, 140, 8, 8, 1, 2, now(), now()),
                   (143, 142, 141, 8, 8, 1, 2, now(), now()),
                   (144, 143, 142, 8, 8, 1, 2, now(), now()),
                   (145, 144, 143, 8, 7, 1, 2, now(), now()),
                   (146, 145, 144, 8, 6, 1, 2, now(), now()),
                   (147, 146, 145, 8, 9, 1, 2, now(), now()),
                   (148, 147, 146, 8, 6, 1, 2, now(), now()),
                   (149, 148, 147, 8, 6, 1, 2, now(), now()),
                   (150, 149, 148, 8, 7, 1, 2, now(), now()),
                   (151, 150, 149, 8, 6, 1, 2, now(), now()),
                   (152, 151, 150, 8, 6, 1, 2, now(), now()),
                   (153, 152, 151, 8, 6, 1, 2, now(), now()),
                   (154, 153, 152, 8, 6, 1, 2, now(), now()),
                   (155, 154, 153, 8, 6, 1, 2, now(), now()),
                   (156, 155, 154, 8, 10, 1, 2, now(), now()),
                   (157, NULL, NULL, NULL, NULL, 1, 3, now(), now()),
                   (158, 157, 155, 9, 11, 1, 3, now(), now()),
                   (159, 158, 156, 9, 12, 1, 3, now(), now()),
                   (160, 159, 157, 9, 11, 1, 3, now(), now()),
                   (161, 160, 158, 9, 11, 1, 3, now(), now()),
                   (162, 161, 159, 9, 11, 1, 3, now(), now()),
                   (163, 162, 160, 9, 11, 1, 3, now(), now()),
                   (164, 163, 161, 9, 11, 1, 3, now(), now()),
                   (165, 164, 162, 9, 11, 1, 3, now(), now()),
                   (166, 165, 163, 9, 12, 1, 3, now(), now()),
                   (167, 166, 164, 9, 11, 1, 3, now(), now()),
                   (168, 167, 165, 9, 11, 1, 3, now(), now()),
                   (169, 168, 166, 9, 11, 1, 3, now(), now()),
                   (170, 169, 167, 9, 11, 1, 3, now(), now()),
                   (171, 170, 168, 9, 13, 1, 3, now(), now()),
                   (172, 171, 169, 9, 12, 1, 3, now(), now()),
                   (173, 172, 170, 9, 11, 1, 3, now(), now()),
                   (174, 173, 171, 9, 11, 1, 3, now(), now()),
                   (175, 174, 172, 9, 12, 1, 3, now(), now()),
                   (176, 175, 173, 9, 13, 1, 3, now(), now()),
                   (177, 176, 174, 10, 12, 1, 3, now(), now()),
                   (178, 177, 175, 10, 11, 1, 3, now(), now()),
                   (179, 178, 176, 10, 11, 1, 3, now(), now()),
                   (180, 179, 177, 10, 11, 1, 3, now(), now()),
                   (181, 180, 178, 10, 11, 1, 3, now(), now()),
                   (182, 181, 179, 10, 11, 1, 3, now(), now()),
                   (183, 182, 180, 10, 11, 1, 3, now(), now()),
                   (184, 183, 181, 10, 11, 1, 3, now(), now()),
                   (185, 184, 182, 10, 11, 1, 3, now(), now()),
                   (186, 185, 183, 10, 11, 1, 3, now(), now()),
                   (187, 186, 184, 10, 13, 1, 3, now(), now()),
                   (188, 187, 185, 10, 11, 1, 3, now(), now()),
                   (189, 188, 186, 11, 11, 1, 3, now(), now()),
                   (190, 189, 187, 11, 11, 1, 3, now(), now()),
                   (191, 190, 188, 11, 12, 1, 3, now(), now()),
                   (192, 191, 189, 11, 11, 1, 3, now(), now()),
                   (193, 192, 190, 11, 11, 1, 3, now(), now()),
                   (194, 193, 191, 11, 11, 1, 3, now(), now()),
                   (195, 194, 192, 11, 11, 1, 3, now(), now()),
                   (196, 195, 193, 11, 11, 1, 3, now(), now()),
                   (197, 196, 194, 11, 11, 1, 3, now(), now()),
                   (198, 197, 195, 11, 11, 1, 3, now(), now()),
                   (199, 198, 196, 11, 11, 1, 3, now(), now()),
                   (200, 199, 197, 11, 11, 1, 3, now(), now()),
                   (201, 200, 198, 11, 11, 1, 3, now(), now()),
                   (202, 201, 199, 11, 11, 1, 3, now(), now()),
                   (203, 202, 200, 11, 11, 1, 3, now(), now()),
                   (204, 203, 201, 12, 14, 1, 3, now(), now()),
                   (205, 204, 202, 12, 12, 1, 3, now(), now()),
                   (206, 205, 203, 12, 11, 1, 3, now(), now()),
                   (207, 206, 204, 12, 11, 1, 3, now(), now()),
                   (208, 207, 205, 12, 11, 1, 3, now(), now()),
                   (209, 208, 206, 12, 11, 1, 3, now(), now()),
                   (210, 209, 207, 12, 11, 1, 3, now(), now()),
                   (211, 210, 208, 12, 11, 1, 3, now(), now()),
                   (212, 211, 209, 12, 11, 1, 3, now(), now()),
                   (213, 212, 210, 12, 11, 1, 3, now(), now()),
                   (214, 213, 211, 12, 11, 1, 3, now(), now()),
                   (215, 214, 212, 12, 12, 1, 3, now(), now()),
                   (216, 215, 213, 12, 13, 1, 3, now(), now()),
                   (217, 216, 214, 12, 11, 1, 3, now(), now()),
                   (218, 217, 215, 12, 12, 1, 3, now(), now()),
                   (219, 218, 216, 12, 11, 1, 3, now(), now()),
                   (220, 219, 217, 12, 11, 1, 3, now(), now()),
                   (221, 220, 218, 12, 11, 1, 3, now(), now()),
                   (222, 221, 219, 12, 11, 1, 3, now(), now()),
                   (223, 222, 220, 12, 12, 1, 3, now(), now()),
                   (224, 223, 221, 12, 11, 1, 3, now(), now()),
                   (225, 224, 222, 12, 11, 1, 3, now(), now()),
                   (226, 225, 223, 12, 12, 1, 3, now(), now()),
                   (227, 226, 224, 12, 11, 1, 3, now(), now()),
                   (228, 227, 225, 12, 13, 1, 3, now(), now()),
                   (229, 228, 226, 12, 12, 1, 3, now(), now()),
                   (230, 229, 227, 12, 11, 1, 3, now(), now()),
                   (231, 230, 228, 12, 14, 1, 3, now(), now()),
                   (232, 231, 229, 12, 14, 1, 3, now(), now()),
                   (233, 232, 230, 12, 11, 1, 3, now(), now()),
                   (234, NULL, NULL, NULL, NULL, 1, 4, now(), now()),
                   (235, 234, 231, 13, 15, 1, 4, now(), now()),
                   (236, 235, 232, 13, 15, 1, 4, now(), now()),
                   (237, 236, 233, 13, 15, 1, 4, now(), now()),
                   (238, 237, 234, 13, 15, 1, 4, now(), now()),
                   (239, 238, 235, 13, 15, 1, 4, now(), now()),
                   (240, 239, 236, 13, 15, 1, 4, now(), now()),
                   (241, 240, 237, 13, 15, 1, 4, now(), now()),
                   (242, 241, 238, 13, 16, 1, 4, now(), now()),
                   (243, 242, 239, 13, 15, 1, 4, now(), now()),
                   (244, 243, 240, 13, 15, 1, 4, now(), now()),
                   (245, 244, 241, 13, 15, 1, 4, now(), now()),
                   (246, 245, 242, 13, 15, 1, 4, now(), now()),
                   (247, 246, 243, 13, 15, 1, 4, now(), now()),
                   (248, 247, 244, 13, 15, 1, 4, now(), now()),
                   (249, 248, 245, 13, 15, 1, 4, now(), now()),
                   (250, 249, 246, 13, 15, 1, 4, now(), now()),
                   (251, 250, 247, 14, 16, 1, 4, now(), now()),
                   (252, 251, 248, 14, 15, 1, 4, now(), now()),
                   (253, 252, 249, 14, 15, 1, 4, now(), now()),
                   (254, 253, 250, 14, 15, 1, 4, now(), now()),
                   (255, 254, 251, 14, 15, 1, 4, now(), now()),
                   (256, 255, 252, 14, 15, 1, 4, now(), now()),
                   (257, 256, 253, 14, 15, 1, 4, now(), now()),
                   (258, 257, 254, 14, 15, 1, 4, now(), now()),
                   (259, 258, 255, 14, 15, 1, 4, now(), now()),
                   (260, 259, 256, 14, 15, 1, 4, now(), now()),
                   (261, 260, 257, 14, 17, 1, 4, now(), now()),
                   (262, 261, 258, 14, 16, 1, 4, now(), now()),
                   (263, 262, 259, 15, 15, 1, 4, now(), now()),
                   (264, 263, 260, 15, 15, 1, 4, now(), now()),
                   (265, 264, 261, 15, 16, 1, 4, now(), now()),
                   (266, 265, 262, 15, 15, 1, 4, now(), now()),
                   (267, 266, 263, 15, 15, 1, 4, now(), now()),
                   (268, 267, 264, 15, 15, 1, 4, now(), now()),
                   (269, 268, 265, 15, 15, 1, 4, now(), now()),
                   (270, 269, 266, 15, 15, 1, 4, now(), now()),
                   (271, 270, 267, 15, 15, 1, 4, now(), now()),
                   (272, 271, 268, 15, 15, 1, 4, now(), now()),
                   (273, 272, 269, 15, 15, 1, 4, now(), now()),
                   (274, 273, 270, 15, 15, 1, 4, now(), now()),
                   (275, 274, 271, 15, 15, 1, 4, now(), now()),
                   (276, 275, 272, 15, 15, 1, 4, now(), now()),
                   (277, 276, 273, 15, 15, 1, 4, now(), now()),
                   (278, 277, 274, 16, 16, 1, 4, now(), now()),
                   (279, 278, 275, 16, 15, 1, 4, now(), now()),
                   (280, 279, 276, 16, 15, 1, 4, now(), now()),
                   (281, 280, 277, 16, 15, 1, 4, now(), now()),
                   (282, 281, 278, 16, 15, 1, 4, now(), now()),
                   (283, 282, 279, 16, 15, 1, 4, now(), now()),
                   (284, 283, 280, 16, 15, 1, 4, now(), now()),
                   (285, 284, 281, 16, 15, 1, 4, now(), now()),
                   (286, 285, 282, 16, 15, 1, 4, now(), now()),
                   (287, 286, 283, 16, 15, 1, 4, now(), now()),
                   (288, 287, 284, 16, 15, 1, 4, now(), now()),
                   (289, 288, 285, 16, 16, 1, 4, now(), now()),
                   (290, 289, 286, 16, 15, 1, 4, now(), now()),
                   (291, 290, 287, 16, 15, 1, 4, now(), now()),
                   (292, 291, 288, 16, 15, 1, 4, now(), now()),
                   (293, 292, 289, 16, 15, 1, 4, now(), now()),
                   (294, 293, 290, 16, 16, 1, 4, now(), now()),
                   (295, 294, 291, 16, 15, 1, 4, now(), now()),
                   (296, 295, 292, 16, 15, 1, 4, now(), now()),
                   (297, 296, 293, 16, 15, 1, 4, now(), now()),
                   (298, 297, 294, 16, 15, 1, 4, now(), now()),
                   (299, 298, 295, 16, 15, 1, 4, now(), now()),
                   (300, NULL, NULL, NULL, NULL, 1, 5, now(), now()),
                   (301, 300, 296, 17, 18, 1, 5, now(), now()),
                   (302, 301, 297, 17, 18, 1, 5, now(), now()),
                   (303, 302, 298, 17, 18, 1, 5, now(), now()),
                   (304, 303, 299, 17, 18, 1, 5, now(), now()),
                   (305, 304, 300, 17, 18, 1, 5, now(), now()),
                   (306, 305, 301, 17, 18, 1, 5, now(), now()),
                   (307, 306, 302, 17, 18, 1, 5, now(), now()),
                   (308, 307, 303, 17, 18, 1, 5, now(), now()),
                   (309, 308, 304, 17, 18, 1, 5, now(), now()),
                   (310, 309, 305, 17, 19, 1, 5, now(), now()),
                   (311, 310, 306, 17, 19, 1, 5, now(), now()),
                   (312, 311, 307, 17, 20, 1, 5, now(), now()),
                   (313, 312, 308, 17, 20, 1, 5, now(), now()),
                   (314, 313, 309, 17, 20, 1, 5, now(), now()),
                   (315, 314, 310, 17, 20, 1, 5, now(), now()),
                   (316, 315, 311, 17, 20, 1, 5, now(), now()),
                   (317, 316, 312, 17, 20, 1, 5, now(), now()),
                   (318, 317, 313, 18, 18, 1, 5, now(), now()),
                   (319, 318, 314, 18, 18, 1, 5, now(), now()),
                   (320, 319, 315, 18, 18, 1, 5, now(), now()),
                   (321, 320, 316, 18, 18, 1, 5, now(), now()),
                   (322, 321, 317, 18, 18, 1, 5, now(), now()),
                   (323, 322, 318, 18, 18, 1, 5, now(), now()),
                   (324, 323, 319, 18, 18, 1, 5, now(), now()),
                   (325, 324, 320, 18, 18, 1, 5, now(), now()),
                   (326, 325, 321, 18, 18, 1, 5, now(), now()),
                   (327, 326, 322, 18, 18, 1, 5, now(), now()),
                   (328, 327, 323, 18, 18, 1, 5, now(), now()),
                   (329, 328, 324, 18, 18, 1, 5, now(), now()),
                   (330, 329, 325, 18, 19, 1, 5, now(), now()),
                   (331, 330, 326, 18, 19, 1, 5, now(), now()),
                   (332, 331, 327, 18, 19, 1, 5, now(), now()),
                   (333, 332, 328, 18, 19, 1, 5, now(), now()),
                   (334, 333, 329, 18, 19, 1, 5, now(), now()),
                   (335, 334, 330, 18, 19, 1, 5, now(), now()),
                   (336, 335, 331, 18, 19, 1, 5, now(), now()),
                   (337, 336, 332, 18, 20, 1, 5, now(), now()),
                   (338, 337, 333, 18, 20, 1, 5, now(), now()),
                   (339, 338, 334, 18, 20, 1, 5, now(), now()),
                   (340, 339, 335, 18, 20, 1, 5, now(), now()),
                   (341, 340, 336, 18, 20, 1, 5, now(), now()),
                   (342, 341, 337, 18, 20, 1, 5, now(), now()),
                   (343, 342, 338, 18, 20, 1, 5, now(), now()),
                   (344, 343, 339, 18, 20, 1, 5, now(), now()),
                   (345, 344, 340, 19, 18, 1, 5, now(), now()),
                   (346, 345, 341, 19, 18, 1, 5, now(), now()),
                   (347, 346, 342, 19, 18, 1, 5, now(), now()),
                   (348, 347, 343, 19, 18, 1, 5, now(), now()),
                   (349, 348, 344, 19, 18, 1, 5, now(), now()),
                   (350, 349, 345, 19, 18, 1, 5, now(), now()),
                   (351, 350, 346, 19, 18, 1, 5, now(), now()),
                   (352, 351, 347, 19, 18, 1, 5, now(), now()),
                   (353, 352, 348, 19, 18, 1, 5, now(), now()),
                   (354, 353, 349, 19, 18, 1, 5, now(), now()),
                   (355, 354, 350, 19, 18, 1, 5, now(), now()),
                   (356, 355, 351, 19, 18, 1, 5, now(), now()),
                   (357, 356, 352, 19, 18, 1, 5, now(), now()),
                   (358, 357, 353, 19, 18, 1, 5, now(), now()),
                   (359, 358, 354, 19, 18, 1, 5, now(), now()),
                   (360, 359, 355, 19, 18, 1, 5, now(), now()),
                   (361, 360, 356, 19, 18, 1, 5, now(), now()),
                   (362, 361, 357, 19, 18, 1, 5, now(), now()),
                   (363, 362, 358, 19, 18, 1, 5, now(), now()),
                   (364, 363, 359, 19, 18, 1, 5, now(), now()),
                   (365, 364, 360, 19, 18, 1, 5, now(), now()),
                   (366, 365, 361, 19, 18, 1, 5, now(), now()),
                   (367, 366, 362, 19, 19, 1, 5, now(), now()),
                   (368, 367, 363, 19, 19, 1, 5, now(), now()),
                   (369, 368, 364, 19, 19, 1, 5, now(), now()),
                   (370, 369, 365, 19, 20, 1, 5, now(), now()),
                   (371, 370, 366, 19, 20, 1, 5, now(), now()),
                   (372, 371, 367, 20, 18, 1, 5, now(), now()),
                   (373, 372, 368, 20, 18, 1, 5, now(), now()),
                   (374, 373, 369, 20, 18, 1, 5, now(), now()),
                   (375, 374, 370, 20, 18, 1, 5, now(), now()),
                   (376, 375, 371, 20, 18, 1, 5, now(), now()),
                   (377, 376, 372, 20, 18, 1, 5, now(), now()),
                   (378, 377, 373, 20, 18, 1, 5, now(), now()),
                   (379, 378, 374, 20, 18, 1, 5, now(), now()),
                   (380, 379, 375, 20, 18, 1, 5, now(), now()),
                   (381, 380, 376, 20, 18, 1, 5, now(), now()),
                   (382, 381, 377, 20, 18, 1, 5, now(), now()),
                   (383, 382, 378, 20, 18, 1, 5, now(), now()),
                   (384, 383, 379, 20, 18, 1, 5, now(), now()),
                   (385, 384, 380, 20, 18, 1, 5, now(), now()),
                   (386, 385, 381, 20, 18, 1, 5, now(), now()),
                   (387, 386, 382, 20, 18, 1, 5, now(), now()),
                   (388, 387, 383, 20, 18, 1, 5, now(), now()),
                   (389, 388, 384, 20, 18, 1, 5, now(), now()),
                   (390, 389, 385, 20, 18, 1, 5, now(), now()),
                   (391, 390, 386, 20, 18, 1, 5, now(), now()),
                   (392, 391, 387, 20, 18, 1, 5, now(), now()),
                   (393, 392, 388, 20, 19, 1, 5, now(), now()),
                   (394, 393, 389, 20, 20, 1, 5, now(), now()),
                   (395, 394, 390, 20, 20, 1, 5, now(), now()),
                   (396, 395, 391, 20, 20, 1, 5, now(), now()),
                   (397, 396, 392, 20, 20, 1, 5, now(), now()),
                   (398, NULL, NULL, NULL, NULL, 1, 6, now(), now()),
                   (399, 398, 393, 21, 21, 1, 6, now(), now()),
                   (400, 399, 394, 21, 21, 1, 6, now(), now()),
                   (401, 400, 395, 21, 21, 1, 6, now(), now()),
                   (402, 401, 396, 21, 21, 1, 6, now(), now()),
                   (403, 402, 397, 21, 21, 1, 6, now(), now()),
                   (404, 403, 398, 21, 21, 1, 6, now(), now()),
                   (405, 404, 399, 21, 21, 1, 6, now(), now()),
                   (406, 405, 400, 21, 21, 1, 6, now(), now()),
                   (407, 406, 401, 21, 21, 1, 6, now(), now()),
                   (408, 407, 402, 21, 22, 1, 6, now(), now()),
                   (409, 408, 403, 21, 23, 1, 6, now(), now()),
                   (410, 409, 404, 21, 24, 1, 6, now(), now()),
                   (411, 410, 405, 21, 24, 1, 6, now(), now()),
                   (412, 411, 406, 21, 24, 1, 6, now(), now()),
                   (413, 412, 407, 21, 24, 1, 6, now(), now()),
                   (414, 413, 408, 21, 24, 1, 6, now(), now()),
                   (415, 414, 409, 21, 24, 1, 6, now(), now()),
                   (416, 415, 410, 22, 21, 1, 6, now(), now()),
                   (417, 416, 411, 22, 21, 1, 6, now(), now()),
                   (418, 417, 412, 22, 21, 1, 6, now(), now()),
                   (419, 418, 413, 22, 21, 1, 6, now(), now()),
                   (420, 419, 414, 22, 21, 1, 6, now(), now()),
                   (421, 420, 415, 22, 21, 1, 6, now(), now()),
                   (422, 421, 416, 22, 21, 1, 6, now(), now()),
                   (423, 422, 417, 22, 21, 1, 6, now(), now()),
                   (424, 423, 418, 22, 21, 1, 6, now(), now()),
                   (425, 424, 419, 22, 21, 1, 6, now(), now()),
                   (426, 425, 420, 22, 21, 1, 6, now(), now()),
                   (427, 426, 421, 22, 21, 1, 6, now(), now()),
                   (428, 427, 422, 22, 22, 1, 6, now(), now()),
                   (429, 428, 423, 22, 22, 1, 6, now(), now()),
                   (430, 429, 424, 22, 22, 1, 6, now(), now()),
                   (431, 430, 425, 22, 22, 1, 6, now(), now()),
                   (432, 431, 426, 22, 22, 1, 6, now(), now()),
                   (433, 432, 427, 22, 22, 1, 6, now(), now()),
                   (434, 433, 428, 22, 22, 1, 6, now(), now()),
                   (435, 434, 429, 22, 24, 1, 6, now(), now()),
                   (436, 435, 430, 22, 24, 1, 6, now(), now()),
                   (437, 436, 431, 22, 24, 1, 6, now(), now()),
                   (438, 437, 432, 22, 24, 1, 6, now(), now()),
                   (439, 438, 433, 22, 24, 1, 6, now(), now()),
                   (440, 439, 434, 22, 24, 1, 6, now(), now()),
                   (441, 440, 435, 22, 24, 1, 6, now(), now()),
                   (442, 441, 436, 22, 24, 1, 6, now(), now()),
                   (443, 442, 437, 23, 21, 1, 6, now(), now()),
                   (444, 443, 438, 23, 21, 1, 6, now(), now()),
                   (445, 444, 439, 23, 21, 1, 6, now(), now()),
                   (446, 445, 440, 23, 21, 1, 6, now(), now()),
                   (447, 446, 441, 23, 21, 1, 6, now(), now()),
                   (448, 447, 442, 23, 21, 1, 6, now(), now()),
                   (449, 448, 443, 23, 21, 1, 6, now(), now()),
                   (450, 449, 444, 23, 21, 1, 6, now(), now()),
                   (451, 450, 445, 23, 21, 1, 6, now(), now()),
                   (452, 451, 446, 23, 21, 1, 6, now(), now()),
                   (453, 452, 447, 23, 21, 1, 6, now(), now()),
                   (454, 453, 448, 23, 21, 1, 6, now(), now()),
                   (455, 454, 449, 23, 21, 1, 6, now(), now()),
                   (456, 455, 450, 23, 21, 1, 6, now(), now()),
                   (457, 456, 451, 23, 21, 1, 6, now(), now()),
                   (458, 457, 452, 23, 21, 1, 6, now(), now()),
                   (459, 458, 453, 23, 21, 1, 6, now(), now()),
                   (460, 459, 454, 23, 21, 1, 6, now(), now()),
                   (461, 460, 455, 23, 21, 1, 6, now(), now()),
                   (462, 461, 456, 23, 21, 1, 6, now(), now()),
                   (463, 462, 457, 23, 21, 1, 6, now(), now()),
                   (464, 463, 458, 23, 21, 1, 6, now(), now()),
                   (465, 464, 459, 23, 22, 1, 6, now(), now()),
                   (466, 465, 460, 23, 22, 1, 6, now(), now()),
                   (467, 466, 461, 23, 22, 1, 6, now(), now()),
                   (468, 467, 462, 23, 24, 1, 6, now(), now()),
                   (469, 468, 463, 23, 24, 1, 6, now(), now()),
                   (470, 469, 464, 24, 21, 1, 6, now(), now()),
                   (471, 470, 465, 24, 21, 1, 6, now(), now()),
                   (472, 471, 466, 24, 21, 1, 6, now(), now()),
                   (473, 472, 467, 24, 21, 1, 6, now(), now()),
                   (474, 473, 468, 24, 21, 1, 6, now(), now()),
                   (475, 474, 469, 24, 21, 1, 6, now(), now()),
                   (476, 475, 470, 24, 21, 1, 6, now(), now()),
                   (477, 476, 471, 24, 21, 1, 6, now(), now()),
                   (478, 477, 472, 24, 21, 1, 6, now(), now()),
                   (479, 478, 473, 24, 21, 1, 6, now(), now()),
                   (480, 479, 474, 24, 21, 1, 6, now(), now()),
                   (481, 480, 475, 24, 21, 1, 6, now(), now()),
                   (482, 481, 476, 24, 21, 1, 6, now(), now()),
                   (483, 482, 477, 24, 21, 1, 6, now(), now()),
                   (484, 483, 478, 24, 21, 1, 6, now(), now()),
                   (485, 484, 479, 24, 21, 1, 6, now(), now()),
                   (486, 485, 480, 24, 21, 1, 6, now(), now()),
                   (487, 486, 481, 24, 21, 1, 6, now(), now()),
                   (488, 487, 482, 24, 21, 1, 6, now(), now()),
                   (489, 488, 483, 24, 21, 1, 6, now(), now()),
                   (490, 489, 484, 24, 21, 1, 6, now(), now()),
                   (491, 490, 485, 24, 22, 1, 6, now(), now()),
                   (492, 491, 486, 24, 24, 1, 6, now(), now()),
                   (493, 492, 487, 24, 24, 1, 6, now(), now()),
                   (494, 493, 488, 24, 24, 1, 6, now(), now()),
                   (495, 494, 489, 24, 24, 1, 6, now(), now()),
                   (496, NULL, NULL, NULL, NULL, 1, 7, now(), now()),
                   (497, 496, 490, 25, 25, 1, 7, now(), now()),
                   (498, 497, 491, 25, 25, 1, 7, now(), now()),
                   (499, 498, 492, 25, 26, 1, 7, now(), now()),
                   (500, 499, 493, 25, 25, 1, 7, now(), now()),
                   (501, 500, 494, 25, 25, 1, 7, now(), now()),
                   (502, 501, 495, 25, 25, 1, 7, now(), now()),
                   (503, 502, 496, 25, 25, 1, 7, now(), now()),
                   (504, 503, 497, 25, 25, 1, 7, now(), now()),
                   (505, 504, 498, 25, 27, 1, 7, now(), now()),
                   (506, 505, 499, 25, 25, 1, 7, now(), now()),
                   (507, 506, 500, 25, 25, 1, 7, now(), now()),
                   (508, 507, 501, 25, 25, 1, 7, now(), now()),
                   (509, 508, 502, 25, 25, 1, 7, now(), now()),
                   (510, 509, 503, 25, 25, 1, 7, now(), now()),
                   (511, 510, 504, 25, 25, 1, 7, now(), now()),
                   (512, 511, 505, 25, 25, 1, 7, now(), now()),
                   (513, 512, 506, 25, 25, 1, 7, now(), now()),
                   (514, 513, 507, 25, 25, 1, 7, now(), now()),
                   (515, 514, 508, 25, 25, 1, 7, now(), now()),
                   (516, 515, 509, 26, 25, 1, 7, now(), now()),
                   (517, 516, 510, 26, 26, 1, 7, now(), now()),
                   (518, 517, 511, 26, 27, 1, 7, now(), now()),
                   (519, 518, 512, 26, 26, 1, 7, now(), now()),
                   (520, 519, 513, 26, 25, 1, 7, now(), now()),
                   (521, 520, 514, 26, 25, 1, 7, now(), now()),
                   (522, 521, 515, 26, 25, 1, 7, now(), now()),
                   (523, 522, 516, 26, 25, 1, 7, now(), now()),
                   (524, 523, 517, 26, 26, 1, 7, now(), now()),
                   (525, 524, 518, 26, 25, 1, 7, now(), now()),
                   (526, 525, 519, 26, 26, 1, 7, now(), now()),
                   (527, 526, 520, 26, 25, 1, 7, now(), now()),
                   (528, 527, 521, 26, 25, 1, 7, now(), now()),
                   (529, 528, 522, 26, 25, 1, 7, now(), now()),
                   (530, 529, 523, 26, 25, 1, 7, now(), now()),
                   (531, 530, 524, 26, 25, 1, 7, now(), now()),
                   (532, 531, 525, 26, 25, 1, 7, now(), now()),
                   (533, 532, 526, 26, 25, 1, 7, now(), now()),
                   (534, 533, 527, 26, 26, 1, 7, now(), now()),
                   (535, 534, 528, 26, 26, 1, 7, now(), now()),
                   (536, 535, 529, 26, 25, 1, 7, now(), now()),
                   (537, 536, 530, 26, 25, 1, 7, now(), now()),
                   (538, 537, 531, 26, 25, 1, 7, now(), now()),
                   (539, 538, 532, 26, 25, 1, 7, now(), now()),
                   (540, 539, 533, 26, 25, 1, 7, now(), now()),
                   (541, 540, 534, 26, 26, 1, 7, now(), now()),
                   (542, 541, 535, 26, 26, 1, 7, now(), now()),
                   (543, 542, 536, 26, 25, 1, 7, now(), now()),
                   (544, 543, 537, 26, 25, 1, 7, now(), now()),
                   (545, 544, 538, 26, 25, 1, 7, now(), now()),
                   (546, 545, 539, 26, 26, 1, 7, now(), now()),
                   (547, 546, 540, 26, 26, 1, 7, now(), now()),
                   (548, 547, 541, 26, 25, 1, 7, now(), now()),
                   (549, 548, 542, 26, 25, 1, 7, now(), now()),
                   (550, 549, 543, 26, 25, 1, 7, now(), now()),
                   (551, 550, 544, 27, 25, 1, 7, now(), now()),
                   (552, 551, 545, 27, 25, 1, 7, now(), now()),
                   (553, 552, 546, 27, 25, 1, 7, now(), now()),
                   (554, 553, 547, 27, 25, 1, 7, now(), now()),
                   (555, 554, 548, 27, 25, 1, 7, now(), now()),
                   (556, 555, 549, 27, 25, 1, 7, now(), now()),
                   (557, 556, 550, 27, 25, 1, 7, now(), now()),
                   (558, 557, 551, 27, 25, 1, 7, now(), now()),
                   (559, 558, 552, 27, 25, 1, 7, now(), now()),
                   (560, 559, 553, 27, 25, 1, 7, now(), now()),
                   (561, 560, 554, 27, 25, 1, 7, now(), now()),
                   (562, 561, 555, 27, 25, 1, 7, now(), now()),
                   (563, 562, 556, 27, 25, 1, 7, now(), now()),
                   (564, 563, 557, 27, 25, 1, 7, now(), now()),
                   (565, 564, 558, 27, 25, 1, 7, now(), now()),
                   (566, 565, 559, 27, 25, 1, 7, now(), now()),
                   (567, 566, 560, 28, 25, 1, 7, now(), now()),
                   (568, 567, 561, 28, 25, 1, 7, now(), now()),
                   (569, 568, 562, 28, 25, 1, 7, now(), now()),
                   (570, 569, 563, 28, 25, 1, 7, now(), now()),
                   (571, 570, 564, 28, 25, 1, 7, now(), now()),
                   (572, 571, 565, 28, 27, 1, 7, now(), now()),
                   (573, 572, 566, 28, 25, 1, 7, now(), now()),
                   (574, 573, 567, 28, 25, 1, 7, now(), now()),
                   (575, 574, 568, 28, 26, 1, 7, now(), now()),
                   (576, 575, 569, 28, 26, 1, 7, now(), now()),
                   (577, 576, 570, 28, 25, 1, 7, now(), now()),
                   (578, 577, 571, 28, 25, 1, 7, now(), now()),
                   (579, 578, 572, 28, 25, 1, 7, now(), now()),
                   (580, NULL, NULL, NULL, NULL, 1, 8, now(), now()),
                   (581, 580, 573, 29, 28, 1, 8, now(), now()),
                   (582, 581, 574, 29, 28, 1, 8, now(), now()),
                   (583, 582, 575, 29, 29, 1, 8, now(), now()),
                   (584, 583, 576, 29, 28, 1, 8, now(), now()),
                   (585, 584, 577, 29, 28, 1, 8, now(), now()),
                   (586, 585, 578, 29, 28, 1, 8, now(), now()),
                   (587, 586, 579, 29, 28, 1, 8, now(), now()),
                   (588, 587, 580, 29, 28, 1, 8, now(), now()),
                   (589, 588, 581, 29, 30, 1, 8, now(), now()),
                   (590, 589, 582, 29, 28, 1, 8, now(), now()),
                   (591, 590, 583, 29, 28, 1, 8, now(), now()),
                   (592, 591, 584, 29, 28, 1, 8, now(), now()),
                   (593, 592, 585, 29, 28, 1, 8, now(), now()),
                   (594, 593, 586, 29, 28, 1, 8, now(), now()),
                   (595, 594, 587, 29, 28, 1, 8, now(), now()),
                   (596, 595, 588, 29, 28, 1, 8, now(), now()),
                   (597, 596, 589, 29, 28, 1, 8, now(), now()),
                   (598, 597, 590, 29, 28, 1, 8, now(), now()),
                   (599, 598, 591, 29, 28, 1, 8, now(), now()),
                   (600, 599, 592, 30, 28, 1, 8, now(), now()),
                   (601, 600, 593, 30, 29, 1, 8, now(), now()),
                   (602, 601, 594, 30, 30, 1, 8, now(), now()),
                   (603, 602, 595, 30, 28, 1, 8, now(), now()),
                   (604, 603, 596, 30, 28, 1, 8, now(), now()),
                   (605, 604, 597, 30, 28, 1, 8, now(), now()),
                   (606, 605, 598, 30, 28, 1, 8, now(), now()),
                   (607, 606, 599, 30, 28, 1, 8, now(), now()),
                   (608, 607, 600, 30, 28, 1, 8, now(), now()),
                   (609, 608, 601, 30, 28, 1, 8, now(), now()),
                   (610, 609, 602, 30, 29, 1, 8, now(), now()),
                   (611, 610, 603, 30, 28, 1, 8, now(), now()),
                   (612, 611, 604, 30, 29, 1, 8, now(), now()),
                   (613, 612, 605, 30, 28, 1, 8, now(), now()),
                   (614, 613, 606, 30, 28, 1, 8, now(), now()),
                   (615, 614, 607, 30, 28, 1, 8, now(), now()),
                   (616, 615, 608, 30, 28, 1, 8, now(), now()),
                   (617, 616, 609, 30, 28, 1, 8, now(), now()),
                   (618, 617, 610, 30, 29, 1, 8, now(), now()),
                   (619, 618, 611, 30, 29, 1, 8, now(), now()),
                   (620, 619, 612, 30, 28, 1, 8, now(), now()),
                   (621, 620, 613, 30, 28, 1, 8, now(), now()),
                   (622, 621, 614, 30, 28, 1, 8, now(), now()),
                   (623, 622, 615, 30, 29, 1, 8, now(), now()),
                   (624, 623, 616, 30, 29, 1, 8, now(), now()),
                   (625, 624, 617, 30, 28, 1, 8, now(), now()),
                   (626, 625, 618, 30, 28, 1, 8, now(), now()),
                   (627, 626, 619, 31, 28, 1, 8, now(), now()),
                   (628, 627, 620, 31, 28, 1, 8, now(), now()),
                   (629, 628, 621, 31, 29, 1, 8, now(), now()),
                   (630, 629, 622, 31, 28, 1, 8, now(), now()),
                   (631, 630, 623, 31, 29, 1, 8, now(), now()),
                   (632, 631, 624, 31, 28, 1, 8, now(), now()),
                   (633, 632, 625, 31, 28, 1, 8, now(), now()),
                   (634, 633, 626, 31, 29, 1, 8, now(), now()),
                   (635, 634, 627, 31, 29, 1, 8, now(), now()),
                   (636, 635, 628, 31, 30, 1, 8, now(), now()),
                   (637, 636, 629, 31, 28, 1, 8, now(), now()),
                   (638, 637, 630, 31, 28, 1, 8, now(), now()),
                   (639, 638, 631, 31, 28, 1, 8, now(), now()),
                   (640, 639, 632, 31, 28, 1, 8, now(), now()),
                   (641, 640, 633, 31, 28, 1, 8, now(), now()),
                   (642, 641, 634, 31, 28, 1, 8, now(), now()),
                   (643, 642, 635, 31, 28, 1, 8, now(), now()),
                   (644, 643, 636, 32, 28, 1, 8, now(), now()),
                   (645, 644, 637, 32, 28, 1, 8, now(), now()),
                   (646, 645, 638, 32, 28, 1, 8, now(), now()),
                   (647, 646, 639, 32, 28, 1, 8, now(), now()),
                   (648, 647, 640, 32, 28, 1, 8, now(), now()),
                   (649, 648, 641, 32, 28, 1, 8, now(), now()),
                   (650, 649, 642, 32, 28, 1, 8, now(), now()),
                   (651, 650, 643, 32, 28, 1, 8, now(), now()),
                   (652, 651, 644, 32, 28, 1, 8, now(), now()),
                   (653, 652, 645, 32, 29, 1, 8, now(), now()),
                   (654, 653, 646, 32, 28, 1, 8, now(), now()),
                   (655, 654, 647, 32, 28, 1, 8, now(), now()),
                   (656, 655, 648, 32, 28, 1, 8, now(), now());
            SELECT setval('blip_event_blip_event_id_seq', (SELECT max(blip_event_id) FROM blip_event));

            INSERT INTO radar_version (radar_version_id, name, release, radar_id, blip_event_id, parent_id, level, toggle_available, creation_time,
                                       last_change_time)
            VALUES (1, '_init_', true, 1, 1, NULL, 0, true, now(), now()),
                   (2, 'first', true, 1, 50, 1, 1, true, now(), now()),
                   (3, 'second', true, 1, 76, 2, 2, true, now(), now()),
                   (4, 'third', true, 1, 78, 3, 3, true, now(), now()),
                   (5, '_init_', true, 2, 79, NULL, 0, true, now(), now()),
                   (6, 'first', true, 2, 156, 5, 1, true, now(), now()),
                   (7, '_init_', true, 3, 157, NULL, 0, true, now(), now()),
                   (8, 'first', true, 3, 233, 7, 1, true, now(), now()),
                   (9, '_init_', true, 4, 234, NULL, 0, true, now(), now()),
                   (10, 'first', true, 4, 299, 9, 1, true, now(), now()),
                   (11, '_init_', true, 5, 300, NULL, 0, true, now(), now()),
                   (12, 'first', true, 5, 397, 11, 1, true, now(), now()),
                   (13, '_init_', true, 6, 398, NULL, 0, true, now(), now()),
                   (14, 'first', true, 6, 495, 13, 1, true, now(), now()),
                   (15, '_init_', true, 7, 496, NULL, 0, true, now(), now()),
                   (16, 'first', true, 7, 579, 15, 1, true, now(), now()),
                   (17, '_init_', true, 8, 580, NULL, 0, true, now(), now()),
                   (18, 'first', true, 8, 656, 17, 1, true, now(), now());
            SELECT setval('radar_version_radar_version_id_seq', (SELECT max(radar_version_id) FROM radar_version));
        </sql>
    </changeSet>

</databaseChangeLog>
